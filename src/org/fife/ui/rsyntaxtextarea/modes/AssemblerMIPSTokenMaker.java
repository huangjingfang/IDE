/* The following code was generated by JFlex 1.4.1 on 2/1/08 1:33 PM */

/*
 * 12/06/2004
 *
 * AssemblerMIPSTokenMaker.java - An object that can take a chunk of text and
 * return a linked list of tokens representing MIPS assembler.
 *
 * This library is distributed under a modified BSD license.  See the included
 * RSyntaxTextArea.License.txt file for details.
 */
package org.fife.ui.rsyntaxtextarea.modes;

import java.io.*;
import javax.swing.text.Segment;

import org.fife.ui.rsyntaxtextarea.*;

/**
 * This class takes plain text and returns tokens representing MIPS assembler.
 * <p>
 *
 * This implementation was created using
 * <a href="http://www.jflex.de/">JFlex</a> 1.4.1; however, the generated file
 * was modified for performance. Memory allocation needs to be almost completely
 * removed to be competitive with the handwritten lexers (subclasses of
 * <code>AbstractTokenMaker</code>, so this class has been modified so that
 * Strings are never allocated (via yytext()), and the scanner never has to
 * worry about refilling its buffer (needlessly copying chars around). We can
 * achieve this because RText always scans exactly 1 line of tokens at a time,
 * and hands the scanner this line as an array of characters (a Segment really).
 * Since tokens contain pointers to char arrays instead of Strings holding their
 * contents, there is no need for allocating new memory for Strings.
 * <p>
 *
 * The actual algorithm generated for scanning has, of course, not been
 * modified.
 * <p>
 *
 * If you wish to regenerate this file yourself, keep in mind the following:
 * <ul>
 * <li>The generated <code>AssemblerMIPSTokenMaker.java</code> file will contain
 * two definitions of both <code>zzRefill</code> and <code>yyreset</code>. You
 * should hand-delete the second of each definition (the ones generated by the
 * lexer), as these generated methods modify the input buffer, which we'll never
 * have to do.</li>
 * <li>You should also change the declaration/definition of zzBuffer to NOT be
 * initialized. This is a needless memory allocation for us since we will be
 * pointing the array somewhere else anyway.</li>
 * <li>You should NOT call <code>yylex()</code> on the generated scanner
 * directly; rather, you should use <code>getTokenList</code> as you would with
 * any other <code>TokenMaker</code> instance.</li>
 * </ul>
 *
 * @author Robert Futrell
 * @version 0.2
 *
 */

public class AssemblerMIPSTokenMaker extends AbstractJFlexTokenMaker {

    /** This character denotes the end of file */
    public static final int YYEOF = -1;

    /** lexical states */
    public static final int YYINITIAL = 0;

    /**
     * ZZ_LEXSTATE[l] is the state in the DFA for the lexical state l
     * ZZ_LEXSTATE[l+1] is the state in the DFA for the lexical state l at the
     * beginning of a line l is of the form l = 2*k, k a non negative integer
     */
    private static final int ZZ_LEXSTATE[] = { 0, 1 };

    /**
     * Translates characters to character classes
     */
    private static final String ZZ_CMAP_PACKED =  "\11\0\1\10\1\7\1\66\1\67\1\66\22\0\1\10\1\14\1\4"+
            "\1\6\1\65\1\13\1\14\1\5\2\0\1\12\1\12\1\3\1\12"+
            "\1\15\1\12\1\27\1\16\1\21\1\24\1\25\1\26\1\20\1\23"+
            "\1\17\1\2\1\11\1\6\1\14\1\14\1\14\1\53\1\0\1\30"+
            "\1\33\1\42\1\44\1\35\1\52\1\54\1\32\1\50\1\1\1\37"+
            "\1\31\1\60\1\45\1\43\1\22\1\61\1\34\1\41\1\46\1\51"+
            "\1\64\1\55\1\57\1\63\1\56\1\3\1\0\1\3\1\14\1\62"+
            "\1\0\1\30\1\33\1\42\1\44\1\35\1\52\1\54\1\32\1\50"+
            "\1\1\1\37\1\31\1\60\1\45\1\43\1\22\1\61\1\34\1\41"+
            "\1\46\1\51\1\64\1\55\1\57\1\63\1\56\1\0\1\14\1\0"+
            "\1\14\6\0\1\66\252\0\2\47\115\0\1\40\u1ea8\0\1\66\1\66"+
            "\u0100\0\1\36\uffff\0\uffff\0\uffff\0\uffff\0\uffff\0\uffff\0\uffff\0\uffff\0\uffff\0\uffff\0\uffff\0\uffff\0\uffff\0\uffff\0\uffff\0\uffff\0\udee5\0";

    /**
     * Translates characters to character classes
     */
    private static final char[] ZZ_CMAP = zzUnpackCMap(ZZ_CMAP_PACKED);

    /**
     * Translates DFA states to action switch labels.
     */
    private static final int[] ZZ_ACTION = zzUnpackAction();

    private static final String ZZ_ACTION_PACKED_0 =   "\2\0\1\1\1\2\1\3\1\4\1\5\1\6\1\7"+
            "\1\10\1\11\34\1\1\12\1\1\1\13\1\1\1\2"+
            "\1\14\1\15\25\0\15\1\1\2\26\1\1\0\2\2"+
            "\6\0\1\2\1\0\1\1\2\2\6\1\1\2\4\1"+
            "\1\2\3\1\1\12\4\1\1\12\12\1\4\0\1\13"+
            "\1\0\5\1\1\13\21\1\7\0\1\2\31\0\1\13"+
            "\11\0\5\1\1\2\1\13\10\1\2\2\4\1\1\13"+
            "\1\2\21\1\1\13\5\1\2\2\3\0\1\13\5\0"+
            "\1\2\2\0\2\2\2\1\1\13\6\1\1\2\14\1"+
            "\1\2\10\1\1\13\10\0\1\13\31\1\1\16\2\0"+
            "\1\13\10\0\1\13\17\0\6\1\1\2\5\1\1\13"+
            "\1\1\1\2\1\17\2\1\1\12\1\1\4\13\5\1"+
            "\2\2\6\0\1\13\3\0\4\1\1\13\1\1\1\13"+
            "\4\1\1\13\13\1\1\13\7\0\23\1\2\0\1\13"+
            "\1\0\1\13\3\0\1\13\5\0\7\1\2\13\7\1"+
            "\1\17\2\0\1\13\2\0\1\1\1\13\13\1\3\0"+
            "\1\13\1\1\2\13\2\1\5\0\1\13\2\1\1\13"+
            "\1\1\2\13\1\0\2\1\1\0\3\1\3\0\1\13"+
            "\1\0\10\1\2\13\2\1\3\0\2\1\1\0\1\1"+
            "\2\0\1\1\1\0\2\1\1\13\2\0";

    private static int[] zzUnpackAction() {
        int[] result = new int[668];
        int offset = 0;
        offset = zzUnpackAction(ZZ_ACTION_PACKED_0, offset, result);
        return result;
    }

    private static int zzUnpackAction(String packed, int offset, int[] result) {
        int i = 0; /* index in packed string */
        int j = offset; /* index in unpacked array */
        int l = packed.length();
        while (i < l) {
            int count = packed.charAt(i++);
            int value = packed.charAt(i++);
            do
                result[j++] = value;
            while (--count > 0);
        }
        return j;
    }

    /**
     * Translates a state to a row index in the transition table
     */
    private static final int[] ZZ_ROWMAP = zzUnpackRowMap();

    private static final String ZZ_ROWMAP_PACKED_0 =  "\0\0\0\70\0\160\0\250\0\340\0\u0118\0\u0150\0\u0188"+
            "\0\160\0\u01c0\0\160\0\u01f8\0\u0230\0\u0268\0\u02a0\0\u02d8"+
            "\0\u0310\0\u0348\0\u0380\0\u03b8\0\u03f0\0\u0428\0\u0460\0\u0498"+
            "\0\u04d0\0\u0508\0\u0540\0\u0578\0\u05b0\0\u05e8\0\u0620\0\u0658"+
            "\0\u0690\0\u06c8\0\u0700\0\u0738\0\u0770\0\u07a8\0\u07e0\0\u0818"+
            "\0\u0850\0\u0850\0\u0888\0\u03b8\0\160\0\160\0\u08c0\0\u08f8"+
            "\0\u0930\0\u0968\0\u09a0\0\u09d8\0\u0a10\0\u0a48\0\u0a80\0\u0ab8"+
            "\0\u0af0\0\u0b28\0\u0b60\0\u0b98\0\u0bd0\0\u0c08\0\u0c40\0\u0c78"+
            "\0\u0cb0\0\u0ce8\0\u0d20\0\u0d58\0\u0d90\0\u0dc8\0\u0e00\0\u0e38"+
            "\0\u0e70\0\u0ea8\0\u0ee0\0\u0f18\0\u0f50\0\u0f88\0\u0fc0\0\u0ff8"+
            "\0\u1030\0\u1068\0\u10a0\0\u10d8\0\u1110\0\u1148\0\u1180\0\u11b8"+
            "\0\u11f0\0\u1228\0\u1260\0\u1298\0\u12d0\0\u1308\0\u1340\0\u1378"+
            "\0\u13b0\0\u13e8\0\u1420\0\u1458\0\u1490\0\u14c8\0\u1500\0\u1538"+
            "\0\u1570\0\u15a8\0\u15e0\0\u1618\0\u1650\0\u1688\0\u16c0\0\u16f8"+
            "\0\u1730\0\u1768\0\u17a0\0\u17d8\0\u1810\0\u1848\0\u1880\0\u18b8"+
            "\0\u18f0\0\u1928\0\u1960\0\u1998\0\u19d0\0\u1a08\0\u1a40\0\u1a78"+
            "\0\u1ab0\0\u1ae8\0\u1b20\0\u1b58\0\u03b8\0\u1b90\0\u1bc8\0\u1c00"+
            "\0\u1c38\0\u1998\0\u1c70\0\u1ca8\0\u1ce0\0\u1d18\0\u1810\0\u1d50"+
            "\0\u1d88\0\u1dc0\0\u1998\0\u1df8\0\u1e30\0\u1e68\0\u1ea0\0\u1ed8"+
            "\0\u1f10\0\u1f48\0\u1f80\0\u1fb8\0\u1ff0\0\u2028\0\u2060\0\u2098"+
            "\0\u20d0\0\u2108\0\u2140\0\u2178\0\u21b0\0\u21e8\0\u2220\0\u2258"+
            "\0\u2290\0\u22c8\0\u2300\0\u2338\0\u2370\0\u23a8\0\u23e0\0\u2418"+
            "\0\u2450\0\u2488\0\u24c0\0\u24f8\0\u2530\0\u2568\0\u25a0\0\u25d8"+
            "\0\u2610\0\u2648\0\u2680\0\u26b8\0\u26f0\0\u2728\0\u2760\0\u2798"+
            "\0\u27d0\0\u2808\0\u2840\0\u2878\0\u28b0\0\u28e8\0\u2920\0\u2958"+
            "\0\u2990\0\u29c8\0\u2a00\0\u2a38\0\u2a70\0\u2aa8\0\u2ae0\0\u2b18"+
            "\0\u2b50\0\u2b88\0\160\0\u2bc0\0\u2bf8\0\u2c30\0\u2c68\0\u2ca0"+
            "\0\u2cd8\0\u2d10\0\u2d48\0\u2d80\0\u2db8\0\u2df0\0\u2e28\0\u2e60"+
            "\0\u2e98\0\u2ed0\0\u03b8\0\u2f08\0\u2f40\0\u2f78\0\u2fb0\0\u2fe8"+
            "\0\u3020\0\u3058\0\u3090\0\u30c8\0\u1110\0\u3100\0\u3138\0\u3170"+
            "\0\u31a8\0\u31e0\0\u0850\0\u3218\0\u3250\0\u3288\0\u32c0\0\u32f8"+
            "\0\u3330\0\u3368\0\u33a0\0\u33d8\0\u3410\0\u3448\0\u3480\0\u34b8"+
            "\0\u34f0\0\u3528\0\u3560\0\u3598\0\u35d0\0\u17d8\0\u3608\0\u3640"+
            "\0\u3678\0\u36b0\0\u36e8\0\u3720\0\u3758\0\u3790\0\u37c8\0\u3800"+
            "\0\u1730\0\u3838\0\u3870\0\u38a8\0\u38e0\0\u3918\0\u3950\0\u3988"+
            "\0\u39c0\0\u39f8\0\u3a30\0\u3a68\0\u3aa0\0\u3ad8\0\u3b10\0\u3b48"+
            "\0\u3b80\0\u3bb8\0\u3bf0\0\u3c28\0\u3c60\0\u3c98\0\u3cd0\0\u3d08"+
            "\0\u3d40\0\u3d78\0\u3db0\0\u3de8\0\u3e20\0\u3e58\0\u3e90\0\u3ec8"+
            "\0\u3f00\0\u3f38\0\u3f70\0\u3fa8\0\u3fe0\0\u4018\0\u4050\0\u4088"+
            "\0\u40c0\0\u40f8\0\u4130\0\u4168\0\u41a0\0\u41d8\0\u4210\0\u4248"+
            "\0\u4280\0\u1570\0\u42b8\0\u42f0\0\u4328\0\u4360\0\u4398\0\u43d0"+
            "\0\u4408\0\u4440\0\u4478\0\u44b0\0\u44e8\0\u4520\0\u4558\0\u4590"+
            "\0\u45c8\0\u4600\0\u4638\0\u4670\0\u46a8\0\u46e0\0\u4718\0\u4750"+
            "\0\u4788\0\u47c0\0\u47f8\0\u4830\0\160\0\u4868\0\u48a0\0\u48d8"+
            "\0\u4910\0\u4948\0\u4980\0\u49b8\0\u49f0\0\u4a28\0\u4a60\0\u4a98"+
            "\0\u4ad0\0\u4b08\0\u4b40\0\u4b78\0\u4bb0\0\u4be8\0\u4c20\0\u4c58"+
            "\0\u4c90\0\u4cc8\0\u4d00\0\u4d38\0\u4d70\0\u4da8\0\u4de0\0\u4e18"+
            "\0\u4e50\0\u4e88\0\u4ec0\0\u4ef8\0\u4f30\0\u4f68\0\u4fa0\0\u4fd8"+
            "\0\u5010\0\u5048\0\u5080\0\u50b8\0\u50f0\0\u5128\0\u5160\0\u03b8"+
            "\0\u5198\0\u51d0\0\u0850\0\u5208\0\u5240\0\u5278\0\u1ff0\0\u2028"+
            "\0\u52b0\0\u52e8\0\u5320\0\u5358\0\u5390\0\160\0\u53c8\0\u5400"+
            "\0\u5438\0\u5470\0\u54a8\0\u54e0\0\u5518\0\u5550\0\u5588\0\u55c0"+
            "\0\u55f8\0\u5630\0\u5668\0\u56a0\0\u56d8\0\u5710\0\u5748\0\u5780"+
            "\0\u57b8\0\u57f0\0\u5828\0\u5860\0\u5898\0\u58d0\0\u5908\0\u5940"+
            "\0\u5978\0\u59b0\0\u59e8\0\u5a20\0\u5a58\0\u5a90\0\u5ac8\0\u5b00"+
            "\0\u5b38\0\u5b70\0\u5ba8\0\u5be0\0\u5c18\0\u5c50\0\u5c88\0\u5cc0"+
            "\0\u5cf8\0\u5d30\0\u5d68\0\u5da0\0\u5dd8\0\u5e10\0\u5e48\0\u5e80"+
            "\0\u5eb8\0\u5ef0\0\u5f28\0\u5f60\0\u5f98\0\u5fd0\0\u6008\0\u6040"+
            "\0\u6078\0\u60b0\0\u60e8\0\u6120\0\u6158\0\u6190\0\u61c8\0\u6200"+
            "\0\u6238\0\u6270\0\u62a8\0\u5518\0\u62e0\0\u6318\0\u6350\0\u6388"+
            "\0\u63c0\0\u63f8\0\u6430\0\u6468\0\u64a0\0\u64d8\0\u42b8\0\u6510"+
            "\0\u6548\0\u6580\0\u65b8\0\u65f0\0\u6628\0\u6660\0\u6698\0\u66d0"+
            "\0\u6708\0\160\0\u6740\0\u6778\0\u4b40\0\u67b0\0\u67e8\0\u6820"+
            "\0\u22c8\0\u6858\0\u6890\0\u68c8\0\u6900\0\u6938\0\u6970\0\u69a8"+
            "\0\u69e0\0\u6a18\0\u6a50\0\u6a88\0\u40f8\0\u6ac0\0\u6af8\0\u6b30"+
            "\0\u6b68\0\u6ba0\0\u6bd8\0\u6c10\0\u6c48\0\u6c80\0\u6cb8\0\u6cf0"+
            "\0\u6d28\0\u6d60\0\u6d98\0\u6dd0\0\u6e08\0\u6e40\0\u6e78\0\u6eb0"+
            "\0\u6ee8\0\u6f20\0\u6f58\0\u6f90\0\u6fc8\0\u7000\0\u7038\0\u7070"+
            "\0\u70a8\0\u48d8\0\u70e0\0\u7118\0\u7150\0\u7188\0\u71c0\0\u71f8"+
            "\0\u7230\0\u7268\0\u72a0\0\u72d8\0\u7310\0\u7348\0\u7380\0\u73b8"+
            "\0\u73f0\0\u7428\0\u7460\0\u7498\0\u74d0\0\u7508\0\u7540\0\u7578"+
            "\0\u75b0\0\u75e8\0\u7620\0\u7658\0\u6548\0\u6580\0\u7690\0\u76c8"+
            "\0\u7700";

    private static int[] zzUnpackRowMap() {
        int[] result = new int[668];
        int offset = 0;
        offset = zzUnpackRowMap(ZZ_ROWMAP_PACKED_0, offset, result);
        return result;
    }

    private static int zzUnpackRowMap(String packed, int offset, int[] result) {
        int i = 0; /* index in packed string */
        int j = offset; /* index in unpacked array */
        int l = packed.length();
        while (i < l) {
            int high = packed.charAt(i++) << 16;
            result[j++] = high | packed.charAt(i++);
        }
        return j;
    }

    /**
     * The transition table of the DFA
     */
    private static final int[] ZZ_TRANS = zzUnpackTrans();

    private static final String ZZ_TRANS_PACKED_0 =  "\1\3\1\4\1\5\1\3\1\6\1\7\1\10\1\11"+
            "\1\12\1\3\3\13\1\14\4\5\1\15\5\5\1\16"+
            "\1\17\1\20\1\21\1\22\1\23\1\3\1\24\1\25"+
            "\1\26\1\27\1\30\1\31\1\32\1\33\1\34\1\35"+
            "\1\36\1\37\1\3\1\40\1\41\1\42\1\43\1\44"+
            "\1\45\1\46\2\24\1\47\1\0\1\12\1\3\1\4"+
            "\1\5\1\3\1\6\1\7\1\10\1\11\1\12\1\3"+
            "\1\13\1\50\1\13\1\14\4\5\1\15\5\5\1\16"+
            "\1\17\1\20\1\21\1\22\1\23\1\3\1\24\1\25"+
            "\1\26\1\27\1\30\1\31\1\32\1\33\1\34\1\35"+
            "\1\36\1\37\1\3\1\40\1\41\1\42\1\43\1\44"+
            "\1\45\1\46\2\24\1\47\1\0\1\12\70\0\1\51"+
            "\2\24\1\0\3\51\2\0\1\52\2\0\1\51\1\0"+
            "\12\24\1\53\3\24\1\54\1\24\1\51\1\24\1\51"+
            "\6\24\1\51\3\24\1\51\11\24\2\51\1\0\1\51"+
            "\1\24\1\5\1\0\3\51\2\0\1\52\2\0\1\51"+
            "\1\0\4\5\1\24\5\5\6\24\1\51\1\24\1\51"+
            "\6\24\1\51\3\24\1\51\11\24\2\51\1\0\4\6"+
            "\1\55\63\6\5\7\1\56\62\7\7\10\1\0\56\10"+
            "\12\0\1\12\56\0\1\12\16\0\1\57\1\60\1\61"+
            "\1\62\2\0\1\62\2\61\1\0\1\63\1\64\1\0"+
            "\1\65\1\66\1\67\2\70\2\71\1\72\1\0\1\73"+
            "\1\74\1\75\2\76\1\77\1\100\2\0\1\101\1\0"+
            "\1\102\1\103\7\0\1\51\2\24\1\0\3\51\2\0"+
            "\1\52\2\0\1\51\1\0\12\24\1\104\3\24\1\105"+
            "\1\24\1\51\1\24\1\51\2\24\1\106\2\24\1\107"+
            "\1\51\1\24\1\110\1\24\1\51\11\24\2\51\1\0"+
            "\1\51\2\24\1\0\3\51\2\0\1\52\2\0\1\51"+
            "\1\0\1\111\5\24\1\112\4\24\1\113\4\24\1\51"+
            "\1\24\1\114\1\115\2\24\1\116\1\117\1\24\1\51"+
            "\3\24\1\51\11\24\2\51\1\0\1\51\2\24\1\0"+
            "\3\51\2\0\1\52\2\0\1\51\1\0\12\24\1\120"+
            "\1\24\2\121\1\122\1\123\1\51\1\24\1\51\2\24"+
            "\1\124\3\24\1\51\1\24\1\125\1\24\1\51\1\24"+
            "\1\54\7\24\2\51\1\0\1\51\2\24\1\0\3\51"+
            "\2\0\1\52\2\0\1\51\1\0\20\24\1\51\1\24"+
            "\1\51\6\24\1\126\1\127\2\24\1\51\11\24\2\51"+
            "\1\0\1\51\2\24\1\0\3\51\2\0\1\52\2\0"+
            "\1\51\1\0\13\24\1\130\2\24\1\131\1\132\1\51"+
            "\1\24\1\51\4\24\1\133\1\24\1\134\1\135\2\24"+
            "\1\51\1\136\6\24\1\137\1\24\2\51\1\0\1\51"+
            "\2\24\1\0\3\51\2\0\1\52\2\0\1\51\1\0"+
            "\17\24\1\140\1\51\1\24\1\51\6\24\1\51\3\24"+
            "\1\51\11\24\2\51\1\0\1\51\2\24\1\0\3\51"+
            "\2\0\1\52\2\0\1\51\1\0\13\24\1\141\2\24"+
            "\1\142\1\24\1\51\1\24\1\51\1\24\1\143\2\24"+
            "\1\144\1\24\1\51\3\24\1\51\3\24\1\145\1\24"+
            "\1\146\2\24\1\147\2\51\1\0\1\51\2\24\1\0"+
            "\3\51\2\0\1\52\2\0\1\51\1\0\20\24\1\51"+
            "\1\24\1\51\6\24\1\51\3\24\1\51\11\24\2\51"+
            "\32\0\1\150\1\151\1\152\1\153\1\154\6\0\1\155"+
            "\1\0\1\156\2\157\1\160\3\0\1\161\5\0\1\162"+
            "\4\0\1\51\2\24\1\0\3\51\2\0\1\52\2\0"+
            "\1\51\1\0\13\24\1\163\1\164\1\165\1\166\1\167"+
            "\1\51\1\24\1\51\3\24\1\45\1\24\1\170\1\171"+
            "\1\172\1\173\1\24\1\51\1\24\1\174\5\24\1\175"+
            "\1\24\2\51\1\0\1\51\2\24\1\0\3\51\2\0"+
            "\1\52\2\0\1\51\1\0\12\24\1\176\5\24\1\51"+
            "\1\24\1\51\2\24\1\177\3\24\1\51\3\24\1\51"+
            "\11\24\2\51\1\0\1\51\2\24\1\0\3\51\2\0"+
            "\1\52\2\0\1\51\1\0\1\111\3\24\1\200\1\24"+
            "\1\112\7\24\1\201\1\24\1\51\1\24\1\51\6\24"+
            "\1\51\2\24\1\202\1\51\10\24\1\203\2\51\1\0"+
            "\1\51\2\24\1\0\3\51\2\0\1\52\2\0\1\51"+
            "\1\0\12\24\1\204\2\24\1\205\2\24\1\51\1\24"+
            "\1\51\2\24\1\206\1\205\1\24\1\205\1\207\1\210"+
            "\1\211\1\205\1\51\1\24\1\212\3\24\1\205\3\24"+
            "\2\51\1\0\1\51\2\24\1\0\3\51\2\0\1\52"+
            "\2\0\1\51\1\0\12\24\1\213\4\24\1\214\1\51"+
            "\1\24\1\51\2\24\1\215\3\24\1\51\3\24\1\51"+
            "\11\24\2\51\1\0\1\51\2\24\1\0\3\51\2\0"+
            "\1\52\2\0\1\51\1\0\14\24\1\216\1\217\1\24"+
            "\1\220\1\51\1\24\1\51\6\24\1\221\1\222\2\24"+
            "\1\51\1\24\1\223\5\24\1\224\1\24\2\51\35\0"+
            "\1\225\1\226\2\0\2\227\3\0\1\230\4\0\1\231"+
            "\5\0\1\232\7\0\1\51\2\24\1\0\3\51\2\0"+
            "\1\52\2\0\1\51\1\0\16\24\1\233\1\234\1\51"+
            "\1\24\1\235\1\236\3\24\1\237\1\24\1\51\2\24"+
            "\1\240\1\51\4\24\1\241\4\24\2\51\1\0\1\51"+
            "\2\24\1\0\3\51\2\0\1\52\2\0\1\51\1\0"+
            "\20\24\1\51\1\24\1\242\1\243\3\24\1\244\1\24"+
            "\1\51\3\24\1\51\11\24\2\51\1\0\1\51\2\24"+
            "\1\0\3\51\2\0\1\52\2\0\1\51\1\0\12\24"+
            "\1\107\5\24\1\51\1\24\1\51\2\24\1\245\3\24"+
            "\1\51\3\24\1\51\1\24\1\223\7\24\2\51\1\0"+
            "\1\51\2\24\1\0\3\51\2\0\1\52\2\0\1\51"+
            "\1\0\13\24\1\246\2\24\1\247\1\24\1\51\1\24"+
            "\1\51\2\24\1\250\3\24\1\51\3\24\1\51\11\24"+
            "\2\51\1\0\1\51\2\24\1\0\3\51\2\0\1\52"+
            "\2\0\1\51\1\0\14\24\1\251\1\24\1\252\1\24"+
            "\1\51\1\24\1\51\2\24\1\253\3\24\1\51\3\24"+
            "\1\51\11\24\2\51\1\0\1\51\2\24\1\0\3\51"+
            "\2\0\1\52\2\0\1\51\1\0\17\24\1\254\1\51"+
            "\1\24\1\51\6\24\1\51\3\24\1\51\11\24\2\51"+
            "\1\0\1\51\2\24\1\0\3\51\2\0\1\52\2\0"+
            "\1\51\1\0\20\24\1\51\1\24\1\51\2\24\1\255"+
            "\3\24\1\51\3\24\1\51\11\24\2\51\1\0\1\51"+
            "\2\24\1\0\3\51\2\0\1\52\2\0\1\51\1\0"+
            "\12\24\1\256\5\24\1\51\1\24\1\51\5\24\1\257"+
            "\1\51\1\24\1\260\1\257\1\51\11\24\2\51\1\0"+
            "\1\51\2\24\1\0\3\51\2\0\1\52\2\0\1\51"+
            "\1\0\20\24\1\51\1\24\1\51\6\24\1\51\3\24"+
            "\1\51\1\24\1\223\7\24\2\51\1\0\1\51\2\24"+
            "\1\0\3\51\2\0\1\52\2\0\1\51\1\0\20\24"+
            "\1\51\1\24\1\51\6\24\1\51\3\24\1\51\6\24"+
            "\1\261\2\24\2\51\31\0\1\262\3\0\1\263\1\0"+
            "\2\264\2\265\4\0\1\266\3\0\1\267\1\0\1\267"+
            "\1\0\1\270\5\0\1\264\4\0\2\50\13\0\20\50"+
            "\1\0\1\50\1\0\6\50\1\0\3\50\1\0\11\50"+
            "\3\0\3\51\1\0\3\51\2\0\1\51\2\0\1\51"+
            "\1\0\51\51\1\0\1\51\2\24\1\0\3\51\2\0"+
            "\1\52\2\0\1\51\1\0\13\24\1\271\4\24\1\51"+
            "\1\24\1\51\6\24\1\51\3\24\1\51\11\24\2\51"+
            "\20\0\1\272\77\0\1\273\57\0\1\274\67\0\1\275"+
            "\101\0\1\276\66\0\1\277\16\0\2\300\1\0\1\301"+
            "\51\0\1\302\3\0\2\303\56\0\1\304\4\0\1\305"+
            "\63\0\1\306\2\0\1\307\10\0\1\310\11\0\1\311"+
            "\34\0\1\312\73\0\1\277\4\0\1\313\10\0\1\314"+
            "\3\0\1\301\51\0\1\315\6\0\1\316\54\0\1\317"+
            "\12\0\1\320\67\0\1\321\61\0\1\322\14\0\1\301"+
            "\67\0\1\323\62\0\1\324\52\0\1\325\71\0\1\326"+
            "\65\0\1\277\1\327\10\0\1\330\15\0\1\331\47\0"+
            "\2\332\1\0\1\333\14\0\1\334\7\0\1\51\2\24"+
            "\1\0\3\51\2\0\1\52\2\0\1\51\1\0\16\24"+
            "\1\335\1\24\1\51\1\24\1\51\6\24\1\51\3\24"+
            "\1\51\1\336\10\24\2\51\1\0\1\51\2\24\1\0"+
            "\3\51\2\0\1\52\2\0\1\51\1\0\20\24\1\51"+
            "\1\24\1\51\2\24\1\337\3\24\1\340\1\341\2\24"+
            "\1\51\11\24\2\51\1\0\1\51\2\24\1\0\3\51"+
            "\2\0\1\52\2\0\1\51\1\0\4\24\1\342\13\24"+
            "\1\51\1\24\1\51\6\24\1\51\3\24\1\51\11\24"+
            "\2\51\1\0\1\51\2\24\1\0\3\51\2\0\1\52"+
            "\2\0\1\51\1\0\16\24\1\343\1\24\1\51\1\24"+
            "\1\51\6\24\1\51\3\24\1\51\11\24\2\51\1\0"+
            "\1\51\2\24\1\0\3\51\2\0\1\52\2\0\1\51"+
            "\1\0\15\24\1\344\1\345\1\24\1\51\1\24\1\346"+
            "\1\347\5\24\1\51\3\24\1\51\11\24\2\51\1\0"+
            "\1\51\2\24\1\0\3\51\2\0\1\52\2\0\1\51"+
            "\1\0\2\24\1\343\15\24\1\51\1\24\1\51\6\24"+
            "\1\51\3\24\1\51\11\24\2\51\1\0\1\51\2\24"+
            "\1\0\3\51\2\0\1\52\2\0\1\51\1\0\3\24"+
            "\1\343\14\24\1\51\1\24\1\51\6\24\1\51\3\24"+
            "\1\51\11\24\2\51\1\0\1\51\2\24\1\0\3\51"+
            "\2\0\1\52\2\0\1\51\1\0\20\24\1\51\1\24"+
            "\1\51\6\24\1\350\1\351\2\24\1\51\11\24\2\51"+
            "\1\0\3\51\1\0\3\51\2\0\1\51\2\0\1\51"+
            "\1\0\22\51\2\352\25\51\1\0\1\51\2\24\1\0"+
            "\3\51\2\0\1\52\2\0\1\51\1\0\20\24\1\51"+
            "\1\24\1\352\1\353\5\24\1\51\3\24\1\51\11\24"+
            "\2\51\1\0\1\51\2\24\1\0\3\51\2\0\1\52"+
            "\2\0\1\51\1\0\16\24\1\54\1\24\1\51\1\24"+
            "\1\51\3\24\1\354\2\24\1\51\3\24\1\51\11\24"+
            "\2\51\1\0\1\51\2\24\1\0\3\51\2\0\1\52"+
            "\2\0\1\51\1\0\20\24\1\51\1\24\1\51\3\24"+
            "\1\355\2\24\1\51\3\24\1\51\11\24\2\51\1\0"+
            "\1\51\2\24\1\0\3\51\2\0\1\52\2\0\1\51"+
            "\1\0\15\24\1\356\2\24\1\51\1\24\1\51\6\24"+
            "\1\51\3\24\1\51\11\24\2\51\1\0\1\51\2\24"+
            "\1\0\3\51\2\0\1\52\2\0\1\51\1\0\20\24"+
            "\1\51\1\24\1\51\6\24\1\51\1\24\1\54\1\24"+
            "\1\51\11\24\2\51\1\0\1\51\2\24\1\0\3\51"+
            "\2\0\1\52\2\0\1\51\1\0\20\24\1\51\1\24"+
            "\1\51\2\24\1\357\3\24\1\51\3\24\1\51\11\24"+
            "\2\51\1\0\1\51\2\24\1\0\3\51\2\0\1\52"+
            "\2\0\1\51\1\0\20\24\1\51\1\24\1\51\4\24"+
            "\1\360\1\24\1\51\3\24\1\51\11\24\2\51\1\0"+
            "\1\51\2\24\1\0\3\51\2\0\1\52\2\0\1\51"+
            "\1\0\20\24\1\51\1\24\1\51\1\24\1\361\4\24"+
            "\1\51\3\24\1\51\1\24\1\362\7\24\2\51\1\0"+
            "\1\51\2\24\1\0\3\51\2\0\1\52\2\0\1\51"+
            "\1\0\20\24\1\51\1\24\1\51\6\24\1\363\1\54"+
            "\2\24\1\51\11\24\2\51\1\0\3\51\1\0\3\51"+
            "\2\0\1\51\2\0\1\51\1\0\36\51\1\364\12\51"+
            "\1\0\1\51\2\24\1\0\3\51\2\0\1\52\2\0"+
            "\1\51\1\0\20\24\1\51\1\24\1\51\6\24\1\51"+
            "\3\24\1\51\1\365\10\24\2\51\1\0\1\51\2\24"+
            "\1\0\3\51\2\0\1\52\2\0\1\51\1\0\17\24"+
            "\1\366\1\51\1\24\1\51\5\24\1\366\1\51\3\24"+
            "\1\51\11\24\2\51\1\0\1\51\2\24\1\0\3\51"+
            "\2\0\1\52\2\0\1\51\1\0\17\24\1\367\1\51"+
            "\1\24\1\51\6\24\1\51\3\24\1\51\11\24\2\51"+
            "\1\0\1\51\2\24\1\0\3\51\2\0\1\52\2\0"+
            "\1\51\1\0\20\24\1\51\1\24\1\51\6\24\1\51"+
            "\3\24\1\51\5\24\1\54\3\24\2\51\1\0\1\51"+
            "\2\24\1\0\3\51\2\0\1\52\2\0\1\51\1\0"+
            "\17\24\1\54\1\51\1\24\1\51\6\24\1\51\3\24"+
            "\1\51\11\24\2\51\1\0\3\51\1\0\3\51\2\0"+
            "\1\51\2\0\1\51\1\0\30\51\1\370\20\51\1\0"+
            "\1\51\2\24\1\0\3\51\2\0\1\52\2\0\1\51"+
            "\1\0\20\24\1\51\1\24\1\51\5\24\1\371\1\51"+
            "\3\24\1\51\11\24\2\51\1\0\1\51\2\24\1\0"+
            "\3\51\2\0\1\52\2\0\1\51\1\0\17\24\1\372"+
            "\1\51\1\24\1\51\5\24\1\366\1\51\3\24\1\51"+
            "\11\24\2\51\1\0\1\51\2\24\1\0\3\51\2\0"+
            "\1\52\2\0\1\51\1\0\20\24\1\51\1\24\1\51"+
            "\5\24\1\373\1\51\3\24\1\51\11\24\2\51\1\0"+
            "\1\51\2\24\1\0\3\51\2\0\1\52\2\0\1\51"+
            "\1\0\4\24\1\374\5\24\1\375\5\24\1\51\1\24"+
            "\1\376\1\377\1\u0100\4\24\1\51\3\24\1\51\11\24"+
            "\2\51\1\0\1\51\2\24\1\0\3\51\2\0\1\52"+
            "\2\0\1\51\1\0\20\24\1\51\1\24\1\u0101\1\u0102"+
            "\5\24\1\51\3\24\1\51\11\24\2\51\1\0\1\51"+
            "\2\24\1\0\3\51\2\0\1\52\2\0\1\51\1\0"+
            "\17\24\1\u0103\1\51\1\24\1\51\6\24\1\51\3\24"+
            "\1\51\11\24\2\51\1\0\1\51\2\24\1\0\3\51"+
            "\2\0\1\52\2\0\1\51\1\0\14\24\1\u0104\3\24"+
            "\1\51\1\24\1\51\6\24\1\51\3\24\1\51\11\24"+
            "\2\51\1\0\1\51\2\24\1\0\3\51\2\0\1\52"+
            "\2\0\1\51\1\0\20\24\1\51\1\24\1\51\3\24"+
            "\1\u0105\2\24\1\51\3\24\1\51\11\24\2\51\1\0"+
            "\1\51\2\24\1\0\3\51\2\0\1\52\2\0\1\51"+
            "\1\0\4\24\1\u0106\13\24\1\51\1\24\1\51\5\24"+
            "\1\u0107\1\u0108\1\u0109\2\24\1\51\11\24\2\51\1\0"+
            "\1\51\2\24\1\0\3\51\2\0\1\52\2\0\1\51"+
            "\1\0\20\24\1\51\1\24\1\51\6\24\1\51\1\24"+
            "\1\205\1\24\1\51\11\24\2\51\1\0\1\51\2\24"+
            "\1\0\3\51\2\0\1\52\2\0\1\51\1\0\17\24"+
            "\1\u010a\1\51\1\24\1\51\6\24\1\51\3\24\1\51"+
            "\11\24\2\51\32\0\1\u010b\14\0\1\u010c\64\0\1\u010d"+
            "\107\0\1\u010e\34\0\2\u010b\100\0\1\u010f\11\0\1\u0110"+
            "\70\0\1\u0111\42\0\1\u0112\3\0\1\u0113\107\0\1\u0114"+
            "\1\0\1\u0115\44\0\1\u0116\77\0\1\u0117\64\0\2\u0118"+
            "\26\0\1\51\2\24\1\0\3\51\2\0\1\52\2\0"+
            "\1\51\1\0\13\24\1\u0119\4\24\1\51\1\24\1\51"+
            "\5\24\1\u011a\1\51\3\24\1\51\11\24\2\51\1\0"+
            "\1\51\2\24\1\0\3\51\2\0\1\52\2\0\1\51"+
            "\1\0\20\24\1\51\1\24\1\51\2\24\1\u011b\3\24"+
            "\1\51\3\24\1\51\11\24\2\51\1\0\1\51\2\24"+
            "\1\0\3\51\2\0\1\52\2\0\1\51\1\0\20\24"+
            "\1\51\1\24\1\51\6\24\1\51\3\24\1\51\7\24"+
            "\1\137\1\24\2\51\1\0\1\51\2\24\1\0\3\51"+
            "\2\0\1\52\2\0\1\51\1\0\12\24\2\u0119\4\24"+
            "\1\51\1\24\1\51\6\24\1\51\3\24\1\51\11\24"+
            "\2\51\1\0\1\51\2\24\1\0\3\51\2\0\1\52"+
            "\2\0\1\51\1\0\20\24\1\51\1\24\1\51\1\24"+
            "\1\u011c\4\24\1\51\3\24\1\51\1\u011d\10\24\2\51"+
            "\1\0\1\51\2\24\1\0\3\51\2\0\1\52\2\0"+
            "\1\51\1\0\12\24\1\u011e\3\24\1\u011f\1\24\1\51"+
            "\1\24\1\51\6\24\1\51\3\24\1\51\11\24\2\51"+
            "\1\0\3\51\1\0\3\51\2\0\1\51\2\0\1\51"+
            "\1\0\36\51\1\u0120\1\51\1\u0121\10\51\1\0\1\51"+
            "\2\24\1\0\3\51\2\0\1\52\2\0\1\51\1\0"+
            "\20\24\1\51\1\24\1\51\6\24\1\51\3\24\1\51"+
            "\1\u0122\1\24\1\u0123\6\24\2\51\1\0\1\51\2\24"+
            "\1\0\3\51\2\0\1\52\2\0\1\51\1\0\15\24"+
            "\1\u0124\2\24\1\51\1\24\1\51\6\24\1\51\3\24"+
            "\1\51\11\24\2\51\1\0\1\51\2\24\1\0\3\51"+
            "\2\0\1\52\2\0\1\51\1\0\20\24\1\51\1\24"+
            "\1\51\2\24\1\253\3\24\1\51\3\24\1\51\11\24"+
            "\2\51\1\0\1\51\2\24\1\0\3\51\2\0\1\52"+
            "\2\0\1\51\1\0\20\24\1\51\1\24\1\u0125\1\u0126"+
            "\5\24\1\51\3\24\1\51\11\24\2\51\1\0\1\51"+
            "\2\24\1\0\3\51\2\0\1\52\2\0\1\51\1\0"+
            "\16\24\1\u0127\1\24\1\51\1\24\1\51\5\24\1\u0128"+
            "\1\51\3\24\1\51\11\24\2\51\1\0\1\51\2\24"+
            "\1\0\3\51\2\0\1\52\2\0\1\51\1\0\20\24"+
            "\1\51\1\24\1\51\3\24\1\u0129\2\24\1\51\3\24"+
            "\1\51\4\24\1\u012a\4\24\2\51\1\0\1\51\2\24"+
            "\1\0\3\51\2\0\1\52\2\0\1\51\1\0\12\24"+
            "\1\u012b\5\24\1\51\1\24\1\51\5\24\1\244\1\51"+
            "\3\24\1\51\11\24\2\51\1\0\1\51\2\24\1\0"+
            "\3\51\2\0\1\52\2\0\1\51\1\0\20\24\1\51"+
            "\1\24\1\51\6\24\1\363\1\54\2\24\1\51\1\343"+
            "\10\24\2\51\1\0\1\51\2\24\1\0\3\51\2\0"+
            "\1\52\2\0\1\51\1\0\20\24\1\51\1\24\1\51"+
            "\6\24\1\51\2\24\1\u012c\1\51\11\24\2\51\1\0"+
            "\1\51\2\24\1\0\3\51\2\0\1\52\2\0\1\51"+
            "\1\0\17\24\1\u012d\1\51\1\24\1\51\6\24\1\51"+
            "\3\24\1\51\11\24\2\51\1\0\1\51\2\24\1\0"+
            "\3\51\2\0\1\52\2\0\1\51\1\0\20\24\1\51"+
            "\1\24\1\51\5\24\1\u012e\1\51\3\24\1\51\11\24"+
            "\2\51\1\0\1\51\2\24\1\0\3\51\2\0\1\52"+
            "\2\0\1\51\1\0\20\24\1\51\1\24\1\u012f\1\u0130"+
            "\5\24\1\51\3\24\1\51\11\24\2\51\1\0\3\51"+
            "\1\0\3\51\2\0\1\51\2\0\1\51\1\0\46\51"+
            "\1\u0131\2\51\1\0\1\51\2\24\1\0\3\51\2\0"+
            "\1\52\2\0\1\51\1\0\20\24\1\51\1\24\1\51"+
            "\6\24\1\51\3\24\1\51\10\24\1\121\2\51\1\0"+
            "\1\51\2\24\1\0\3\51\2\0\1\52\2\0\1\51"+
            "\1\0\4\24\1\205\13\24\1\51\1\24\1\51\6\24"+
            "\1\51\3\24\1\51\11\24\2\51\1\0\1\51\2\24"+
            "\1\0\3\51\2\0\1\52\2\0\1\51\1\0\20\24"+
            "\1\51\1\24\1\51\6\24\1\51\3\24\1\51\4\24"+
            "\1\336\4\24\2\51\1\0\1\51\2\24\1\0\3\51"+
            "\2\0\1\52\2\0\1\51\1\0\12\24\1\107\5\24"+
            "\1\51\1\24\1\51\6\24\1\51\3\24\1\51\11\24"+
            "\2\51\1\0\1\51\2\24\1\0\3\51\2\0\1\52"+
            "\2\0\1\51\1\0\16\24\1\54\1\24\1\51\1\24"+
            "\1\u0132\1\u0133\5\24\1\51\3\24\1\51\11\24\2\51"+
            "\1\0\1\51\2\24\1\0\3\51\2\0\1\52\2\0"+
            "\1\51\1\0\20\24\1\51\1\24\1\51\6\24\1\370"+
            "\1\371\2\24\1\51\11\24\2\51\1\0\1\51\2\24"+
            "\1\0\3\51\2\0\1\52\2\0\1\51\1\0\20\24"+
            "\1\51\1\24\1\51\6\24\1\51\3\24\1\51\3\24"+
            "\1\u0134\5\24\2\51\1\0\3\51\1\0\3\51\2\0"+
            "\1\51\2\0\1\51\1\0\30\51\1\u0135\11\51\1\u0136"+
            "\6\51\1\0\1\51\2\24\1\0\3\51\2\0\1\52"+
            "\2\0\1\51\1\0\20\24\1\51\1\24\1\51\5\24"+
            "\1\u0137\1\51\3\24\1\51\4\24\1\u0138\4\24\2\51"+
            "\1\0\1\51\2\24\1\0\3\51\2\0\1\52\2\0"+
            "\1\51\1\0\4\24\1\u0139\13\24\1\51\1\24\1\51"+
            "\6\24\1\51\3\24\1\51\11\24\2\51\23\0\1\u013a"+
            "\112\0\1\312\70\0\1\u013b\61\0\2\u013c\1\u013d\21\0"+
            "\1\u013e\21\0\1\323\2\0\1\323\11\0\1\323\1\0"+
            "\1\323\6\0\1\u013f\1\u0140\1\0\2\u0141\41\0\1\u0142"+
            "\45\0\1\51\2\24\1\0\3\51\2\0\1\52\2\0"+
            "\1\51\1\0\4\24\1\u0143\13\24\1\51\1\24\1\51"+
            "\6\24\1\51\3\24\1\51\11\24\2\51\1\0\1\51"+
            "\2\24\1\0\3\51\2\0\1\52\2\0\1\51\1\0"+
            "\20\24\1\51\1\24\1\51\4\24\1\u0144\1\24\1\51"+
            "\3\24\1\51\11\24\2\51\1\0\3\51\1\0\3\51"+
            "\2\0\1\51\2\0\1\51\1\0\30\51\1\u0145\20\51"+
            "\1\0\1\51\2\24\1\0\3\51\2\0\1\52\2\0"+
            "\1\51\1\0\20\24\1\51\1\24\1\51\5\24\1\u0146"+
            "\1\51\3\24\1\51\11\24\2\51\1\0\1\51\2\24"+
            "\1\0\3\51\2\0\1\52\2\0\1\51\1\0\20\24"+
            "\1\51\1\24\1\u0147\1\u0148\1\u0149\4\24\1\51\3\24"+
            "\1\51\10\24\1\u014a\2\51\1\0\1\51\2\24\1\0"+
            "\3\51\2\0\1\52\2\0\1\51\1\0\1\343\2\24"+
            "\1\343\11\24\1\343\1\24\1\343\1\51\1\24\1\51"+
            "\3\24\1\u014b\1\u014c\1\24\1\u014d\1\u014e\2\24\1\51"+
            "\11\24\2\51\1\0\1\51\2\24\1\0\3\51\2\0"+
            "\1\52\2\0\1\51\1\0\4\24\1\u0106\13\24\1\51"+
            "\1\24\1\51\6\24\1\51\3\24\1\51\11\24\2\51"+
            "\1\0\3\51\1\0\3\51\2\0\1\51\2\0\1\51"+
            "\1\0\17\51\1\u014f\31\51\1\0\1\51\2\24\1\0"+
            "\3\51\2\0\1\52\2\0\1\51\1\0\17\24\1\u0150"+
            "\1\51\1\24\1\51\6\24\1\51\3\24\1\51\11\24"+
            "\2\51\1\0\1\51\2\24\1\0\3\51\2\0\1\52"+
            "\2\0\1\51\1\0\20\24\1\51\1\24\1\51\6\24"+
            "\1\u0151\1\u0152\2\24\1\51\11\24\2\51\1\0\1\51"+
            "\2\24\1\0\3\51\2\0\1\52\2\0\1\51\1\0"+
            "\16\24\1\u0143\1\24\1\51\1\24\1\51\6\24\1\51"+
            "\3\24\1\51\11\24\2\51\1\0\1\51\2\24\1\0"+
            "\3\51\2\0\1\52\2\0\1\51\1\0\20\24\1\51"+
            "\1\24\1\51\2\24\1\u0153\3\24\1\51\3\24\1\51"+
            "\11\24\2\51\1\0\1\51\2\24\1\0\3\51\2\0"+
            "\1\52\2\0\1\51\1\0\20\24\1\51\1\24\1\51"+
            "\2\24\1\u0154\3\24\1\51\3\24\1\51\11\24\2\51"+
            "\1\0\1\51\2\24\1\0\3\51\2\0\1\52\2\0"+
            "\1\51\1\0\20\24\1\51\1\24\1\51\5\24\1\u0104"+
            "\1\51\3\24\1\51\11\24\2\51\1\0\1\51\2\24"+
            "\1\0\3\51\2\0\1\52\2\0\1\51\1\0\20\24"+
            "\1\51\1\24\1\51\6\24\1\u0135\1\u0137\2\24\1\51"+
            "\11\24\2\51\1\0\1\51\2\24\1\0\3\51\2\0"+
            "\1\52\2\0\1\51\1\0\20\24\1\51\1\24\1\51"+
            "\5\24\1\343\1\51\3\24\1\51\11\24\2\51\1\0"+
            "\1\51\2\24\1\0\3\51\2\0\1\52\2\0\1\51"+
            "\1\0\16\24\1\u0155\1\24\1\51\1\24\1\51\6\24"+
            "\1\51\3\24\1\51\11\24\2\51\1\0\1\51\2\24"+
            "\1\0\3\51\2\0\1\52\2\0\1\51\1\0\16\24"+
            "\1\u0156\1\24\1\51\1\24\1\51\6\24\1\51\3\24"+
            "\1\51\11\24\2\51\1\0\1\51\2\24\1\0\3\51"+
            "\2\0\1\52\2\0\1\51\1\0\16\24\1\355\1\24"+
            "\1\51\1\24\1\51\6\24\1\51\3\24\1\51\11\24"+
            "\2\51\1\0\1\51\2\24\1\0\3\51\2\0\1\52"+
            "\2\0\1\51\1\0\20\24\1\51\1\24\1\51\1\24"+
            "\1\u0157\4\24\1\51\3\24\1\51\11\24\2\51\1\0"+
            "\1\51\2\24\1\0\3\51\2\0\1\52\2\0\1\51"+
            "\1\0\13\24\1\u0158\1\125\3\24\1\51\1\24\1\51"+
            "\1\24\1\u0159\4\24\1\51\3\24\1\51\11\24\2\51"+
            "\1\0\1\51\2\24\1\0\3\51\2\0\1\52\2\0"+
            "\1\51\1\0\13\24\1\u015a\4\24\1\51\1\24\1\51"+
            "\6\24\1\51\3\24\1\51\11\24\2\51\1\0\1\51"+
            "\2\24\1\0\3\51\2\0\1\52\2\0\1\51\1\0"+
            "\13\24\1\u015b\4\24\1\51\1\24\1\51\6\24\1\51"+
            "\2\24\1\u015c\1\51\11\24\2\51\17\0\1\u015d\2\0"+
            "\1\u015d\2\0\1\u015d\2\0\1\u015d\16\0\1\u015d\51\0"+
            "\1\u015d\55\0\1\u015d\10\0\1\u015d\56\0\1\u015d\1\0"+
            "\10\u015d\42\0\1\u015d\13\0\4\u015d\1\0\5\u015d\62\0"+
            "\1\u015d\102\0\1\u015e\32\0\1\51\2\24\1\0\3\51"+
            "\2\0\1\52\2\0\1\51\1\0\16\24\1\54\1\24"+
            "\1\51\1\24\1\51\6\24\1\51\3\24\1\51\11\24"+
            "\2\51\21\0\1\323\66\0\1\u015f\70\0\1\u0160\67\0"+
            "\1\u0160\2\0\1\323\66\0\1\u0161\76\0\1\u0162\76\0"+
            "\2\u0163\70\0\1\u0164\62\0\1\u0165\72\0\2\323\72\0"+
            "\1\u0166\45\0\1\u0167\105\0\2\u0168\62\0\1\u0169\77\0"+
            "\1\u016a\72\0\2\u016b\63\0\1\323\104\0\1\323\36\0"+
            "\1\u016c\74\0\1\76\76\0\1\u016d\1\u016e\70\0\1\u016f"+
            "\61\0\2\u0170\45\0\1\u0171\11\0\1\u0172\10\0\1\330"+
            "\104\0\1\u016b\56\0\1\u0173\55\0\1\u0174\102\0\2\u0175"+
            "\66\0\2\u0176\53\0\1\315\113\0\1\323\61\0\1\u0177"+
            "\61\0\1\u0178\102\0\1\323\10\0\1\51\2\24\1\0"+
            "\3\51\2\0\1\52\2\0\1\51\1\0\20\24\1\51"+
            "\1\24\1\51\6\24\1\u0179\1\u017a\2\24\1\51\11\24"+
            "\2\51\1\0\1\51\2\24\1\0\3\51\2\0\1\52"+
            "\2\0\1\51\1\0\17\24\1\343\1\51\1\24\1\51"+
            "\6\24\1\51\3\24\1\51\11\24\2\51\1\0\1\51"+
            "\2\24\1\0\3\51\2\0\1\52\2\0\1\51\1\0"+
            "\20\24\1\51\1\24\1\51\1\24\1\343\3\24\1\u0104"+
            "\1\51\3\24\1\51\11\24\2\51\1\0\3\51\1\0"+
            "\3\51\2\0\1\51\2\0\1\51\1\0\46\51\1\u017b"+
            "\2\51\1\0\1\51\2\24\1\0\3\51\2\0\1\52"+
            "\2\0\1\51\1\0\20\24\1\51\1\24\1\51\6\24"+
            "\1\51\3\24\1\51\10\24\1\u017c\2\51\1\0\1\51"+
            "\2\24\1\0\3\51\2\0\1\52\2\0\1\51\1\0"+
            "\20\24\1\51\1\24\1\51\1\24\1\u017d\4\24\1\51"+
            "\3\24\1\51\11\24\2\51\1\0\1\51\2\24\1\0"+
            "\3\51\2\0\1\52\2\0\1\51\1\0\13\24\1\u017e"+
            "\4\24\1\51\1\24\1\51\6\24\1\51\3\24\1\51"+
            "\11\24\2\51\1\0\1\51\2\24\1\0\3\51\2\0"+
            "\1\52\2\0\1\51\1\0\20\24\1\51\1\24\1\51"+
            "\6\24\1\51\3\24\1\51\1\336\10\24\2\51\1\0"+
            "\3\51\1\0\3\51\2\0\1\51\2\0\1\51\1\0"+
            "\14\51\1\u017f\34\51\1\0\1\51\2\24\1\0\3\51"+
            "\2\0\1\52\2\0\1\51\1\0\14\24\1\342\3\24"+
            "\1\51\1\24\1\51\6\24\1\51\3\24\1\51\11\24"+
            "\2\51\1\0\3\51\1\0\3\51\2\0\1\51\2\0"+
            "\1\51\1\0\36\51\1\u0180\12\51\1\0\1\51\2\24"+
            "\1\0\3\51\2\0\1\52\2\0\1\51\1\0\20\24"+
            "\1\51\1\24\1\51\6\24\1\51\3\24\1\51\1\u0181"+
            "\10\24\2\51\1\0\3\51\1\0\3\51\2\0\1\51"+
            "\2\0\1\51\1\0\33\51\1\u0182\15\51\1\0\1\51"+
            "\2\24\1\0\3\51\2\0\1\52\2\0\1\51\1\0"+
            "\20\24\1\51\1\24\1\51\6\24\1\51\1\24\1\213"+
            "\1\24\1\51\11\24\2\51\1\0\1\51\2\24\1\0"+
            "\3\51\2\0\1\52\2\0\1\51\1\0\16\24\1\343"+
            "\1\24\1\51\1\24\1\51\6\24\1\u0131\1\121\1\54"+
            "\1\24\1\51\11\24\2\51\1\0\1\51\2\24\1\0"+
            "\3\51\2\0\1\52\2\0\1\51\1\0\17\24\1\u0183"+
            "\1\51\1\24\1\51\6\24\1\51\3\24\1\51\11\24"+
            "\2\51\1\0\1\51\2\24\1\0\3\51\2\0\1\52"+
            "\2\0\1\51\1\0\20\24\1\51\1\24\1\51\6\24"+
            "\1\51\2\24\1\202\1\51\11\24\2\51\1\0\1\51"+
            "\2\24\1\0\3\51\2\0\1\52\2\0\1\51\1\0"+
            "\20\24\1\51\1\24\1\51\6\24\1\51\3\24\1\51"+
            "\1\u0184\10\24\2\51\1\0\1\51\2\24\1\0\3\51"+
            "\2\0\1\52\2\0\1\51\1\0\12\24\1\u0183\5\24"+
            "\1\51\1\24\1\51\6\24\1\51\3\24\1\51\11\24"+
            "\2\51\1\0\1\51\2\24\1\0\3\51\2\0\1\52"+
            "\2\0\1\51\1\0\20\24\1\51\1\24\1\51\6\24"+
            "\1\51\3\24\1\51\1\24\1\u0100\7\24\2\51\1\0"+
            "\3\51\1\0\3\51\2\0\1\51\2\0\1\51\1\0"+
            "\14\51\1\u0185\34\51\1\0\1\51\2\24\1\0\3\51"+
            "\2\0\1\52\2\0\1\51\1\0\14\24\1\362\3\24"+
            "\1\51\1\24\1\51\6\24\1\51\3\24\1\51\11\24"+
            "\2\51\1\0\1\51\2\24\1\0\3\51\2\0\1\52"+
            "\2\0\1\51\1\0\20\24\1\51\1\24\1\51\6\24"+
            "\1\51\3\24\1\51\2\24\1\54\6\24\2\51\1\0"+
            "\1\51\2\24\1\0\3\51\2\0\1\52\2\0\1\51"+
            "\1\0\12\24\1\u0186\5\24\1\51\1\24\1\51\6\24"+
            "\1\51\3\24\1\51\11\24\2\51\1\0\3\51\1\0"+
            "\3\51\2\0\1\51\2\0\1\51\1\0\22\51\2\52"+
            "\25\51\1\0\1\51\2\24\1\0\3\51\2\0\1\52"+
            "\2\0\1\51\1\0\20\24\1\51\1\24\1\52\1\343"+
            "\5\24\1\51\3\24\1\51\11\24\2\51\1\0\1\51"+
            "\2\24\1\0\3\51\2\0\1\52\2\0\1\51\1\0"+
            "\20\24\1\51\1\24\1\51\6\24\1\51\3\24\1\51"+
            "\2\24\1\u0187\6\24\2\51\1\0\1\51\2\24\1\0"+
            "\3\51\2\0\1\52\2\0\1\51\1\0\17\24\1\u0188"+
            "\1\51\1\24\1\51\6\24\1\51\3\24\1\51\11\24"+
            "\2\51\1\0\1\51\2\24\1\0\3\51\2\0\1\52"+
            "\2\0\1\51\1\0\17\24\1\u0189\1\51\1\24\1\51"+
            "\5\24\1\343\1\51\3\24\1\51\11\24\2\51\1\0"+
            "\1\51\2\24\1\0\3\51\2\0\1\52\2\0\1\51"+
            "\1\0\13\24\1\u018a\4\24\1\51\1\24\1\51\6\24"+
            "\1\51\3\24\1\51\11\24\2\51\1\0\3\51\1\0"+
            "\3\51\2\0\1\51\2\0\1\51\1\0\15\51\1\u018b"+
            "\10\51\1\u018b\1\51\1\u018b\6\51\1\u018b\3\51\1\u018b"+
            "\5\51\1\0\1\51\2\24\1\0\3\51\2\0\1\52"+
            "\2\0\1\51\1\0\15\24\1\205\2\24\1\51\1\24"+
            "\1\51\3\24\1\205\1\24\1\205\1\51\3\24\1\51"+
            "\1\24\1\205\3\24\1\205\3\24\2\51\1\0\1\51"+
            "\2\24\1\0\3\51\2\0\1\52\2\0\1\51\1\0"+
            "\20\24\1\51\1\24\1\51\2\24\1\u018c\3\24\1\51"+
            "\3\24\1\51\11\24\2\51\1\0\3\51\1\0\3\51"+
            "\2\0\1\51\2\0\1\51\1\0\17\51\1\u018d\31\51"+
            "\1\0\1\51\2\24\1\0\3\51\2\0\1\52\2\0"+
            "\1\51\1\0\17\24\1\u018e\1\51\1\24\1\51\6\24"+
            "\1\51\3\24\1\51\11\24\2\51\1\0\1\51\2\24"+
            "\1\0\3\51\2\0\1\52\2\0\1\51\1\0\20\24"+
            "\1\51\1\24\1\51\5\24\1\54\1\51\3\24\1\51"+
            "\11\24\2\51\1\0\1\51\2\24\1\0\3\51\2\0"+
            "\1\52\2\0\1\51\1\0\20\24\1\51\1\24\1\51"+
            "\2\24\1\343\3\24\1\51\3\24\1\51\11\24\2\51"+
            "\1\0\1\51\2\24\1\0\3\51\2\0\1\52\2\0"+
            "\1\51\1\0\4\24\1\343\13\24\1\51\1\24\1\u018f"+
            "\1\u0190\5\24\1\u0191\1\u0192\2\24\1\51\4\24\1\343"+
            "\4\24\2\51\1\0\1\51\2\24\1\0\3\51\2\0"+
            "\1\52\2\0\1\51\1\0\16\24\1\u010a\1\u0193\1\51"+
            "\1\24\1\51\6\24\1\51\3\24\1\51\11\24\2\51"+
            "\1\0\3\51\1\0\3\51\2\0\1\51\2\0\1\51"+
            "\1\0\30\51\1\u0194\20\51\1\0\1\51\2\24\1\0"+
            "\3\51\2\0\1\52\2\0\1\51\1\0\20\24\1\51"+
            "\1\24\1\51\5\24\1\u0195\1\51\3\24\1\51\11\24"+
            "\2\51\1\0\1\51\2\24\1\0\3\51\2\0\1\52"+
            "\2\0\1\51\1\0\20\24\1\51\1\24\1\51\4\24"+
            "\1\343\1\24\1\51\3\24\1\51\11\24\2\51\65\0"+
            "\1\u0196\52\0\2\u0197\1\u0196\52\0\1\u016b\101\0\1\u0198"+
            "\67\0\1\u0199\101\0\1\u019a\51\0\1\u019b\76\0\1\u019c"+
            "\63\0\1\u019d\57\0\1\u019e\72\0\2\u013c\4\0\1\u019f"+
            "\2\0\1\u0196\52\0\1\u01a0\75\0\1\u01a1\25\0\1\51"+
            "\2\24\1\0\3\51\2\0\1\52\2\0\1\51\1\0"+
            "\20\24\1\51\1\24\1\51\6\24\1\51\3\24\1\51"+
            "\10\24\1\54\2\51\1\0\1\51\2\24\1\0\3\51"+
            "\2\0\1\52\2\0\1\51\1\0\20\24\1\51\1\24"+
            "\1\51\6\24\1\u0131\1\121\1\54\1\24\1\51\11\24"+
            "\2\51\1\0\1\51\2\24\1\0\3\51\2\0\1\52"+
            "\2\0\1\51\1\0\16\24\1\252\1\24\1\51\1\24"+
            "\1\51\6\24\1\51\3\24\1\51\11\24\2\51\1\0"+
            "\1\51\2\24\1\0\3\51\2\0\1\52\2\0\1\51"+
            "\1\0\20\24\1\51\1\24\1\51\5\24\1\244\1\51"+
            "\3\24\1\51\11\24\2\51\1\0\1\51\2\24\1\0"+
            "\3\51\2\0\1\52\2\0\1\51\1\0\20\24\1\51"+
            "\1\24\1\51\6\24\1\51\3\24\1\51\4\24\1\u01a2"+
            "\4\24\2\51\1\0\1\51\2\24\1\0\3\51\2\0"+
            "\1\52\2\0\1\51\1\0\20\24\1\51\1\24\1\51"+
            "\1\24\1\u01a3\4\24\1\51\3\24\1\51\11\24\2\51"+
            "\1\0\1\51\2\24\1\0\3\51\2\0\1\52\2\0"+
            "\1\51\1\0\20\24\1\51\1\24\1\51\6\24\1\51"+
            "\1\24\1\u01a4\1\24\1\51\11\24\2\51\1\0\3\51"+
            "\1\0\3\51\2\0\1\51\2\0\1\51\1\0\27\51"+
            "\1\u01a5\21\51\1\0\3\51\1\0\3\51\2\0\1\51"+
            "\2\0\1\51\1\0\17\51\1\u01a6\31\51\1\0\1\51"+
            "\2\24\1\0\3\51\2\0\1\52\2\0\1\51\1\0"+
            "\20\24\1\51\1\24\1\51\4\24\1\u01a7\1\24\1\51"+
            "\3\24\1\51\11\24\2\51\1\0\1\51\2\24\1\0"+
            "\3\51\2\0\1\52\2\0\1\51\1\0\17\24\1\u01a8"+
            "\1\51\1\24\1\51\6\24\1\51\3\24\1\51\11\24"+
            "\2\51\1\0\1\51\2\24\1\0\3\51\2\0\1\52"+
            "\2\0\1\51\1\0\20\24\1\51\1\24\1\u0147\1\u0148"+
            "\4\24\1\u01a9\1\51\1\24\1\54\1\24\1\51\11\24"+
            "\2\51\1\0\3\51\1\0\3\51\2\0\1\51\2\0"+
            "\1\51\1\0\24\51\1\u01aa\24\51\1\0\1\51\2\24"+
            "\1\0\3\51\2\0\1\52\2\0\1\51\1\0\20\24"+
            "\1\51\1\24\1\51\1\24\1\u01ab\4\24\1\51\3\24"+
            "\1\51\11\24\2\51\1\0\1\51\2\24\1\0\3\51"+
            "\2\0\1\52\2\0\1\51\1\0\16\24\1\u01ac\1\24"+
            "\1\51\1\24\1\51\6\24\1\51\3\24\1\51\11\24"+
            "\2\51\1\0\1\51\2\24\1\0\3\51\2\0\1\52"+
            "\2\0\1\51\1\0\20\24\1\51\1\24\1\u0147\1\u0148"+
            "\5\24\1\51\3\24\1\51\11\24\2\51\1\0\1\51"+
            "\2\24\1\0\3\51\2\0\1\52\2\0\1\51\1\0"+
            "\17\24\1\u0130\1\51\1\24\1\51\6\24\1\51\3\24"+
            "\1\51\11\24\2\51\1\0\1\51\2\24\1\0\3\51"+
            "\2\0\1\52\2\0\1\51\1\0\20\24\1\51\1\24"+
            "\1\51\6\24\1\51\3\24\1\51\4\24\1\u01ad\4\24"+
            "\2\51\1\0\1\51\2\24\1\0\3\51\2\0\1\52"+
            "\2\0\1\51\1\0\20\24\1\51\1\24\1\51\5\24"+
            "\1\u0148\1\51\3\24\1\51\11\24\2\51\1\0\1\51"+
            "\2\24\1\0\3\51\2\0\1\52\2\0\1\51\1\0"+
            "\20\24\1\51\1\24\1\u01ae\1\u01af\5\24\1\51\3\24"+
            "\1\51\11\24\2\51\1\0\1\51\2\24\1\0\3\51"+
            "\2\0\1\52\2\0\1\51\1\0\16\24\1\u01b0\1\24"+
            "\1\51\1\24\1\51\6\24\1\51\3\24\1\51\11\24"+
            "\2\51\1\0\1\51\2\24\1\0\3\51\2\0\1\52"+
            "\2\0\1\51\1\0\12\24\1\u0130\5\24\1\51\1\24"+
            "\1\51\6\24\1\51\3\24\1\51\11\24\2\51\1\0"+
            "\3\51\1\0\3\51\2\0\1\51\2\0\1\51\1\0"+
            "\22\51\2\u01b1\25\51\1\0\1\51\2\24\1\0\3\51"+
            "\2\0\1\52\2\0\1\51\1\0\20\24\1\51\1\24"+
            "\1\u01b1\1\u01b2\5\24\1\51\3\24\1\51\11\24\2\51"+
            "\1\0\3\51\1\0\3\51\2\0\1\51\2\0\1\51"+
            "\1\0\33\51\1\363\15\51\1\0\3\51\1\0\3\51"+
            "\2\0\1\51\2\0\1\51\1\0\4\51\1\u01b3\44\51"+
            "\1\0\1\51\2\24\1\0\3\51\2\0\1\52\2\0"+
            "\1\51\1\0\4\24\1\u01b4\13\24\1\51\1\24\1\51"+
            "\6\24\1\51\3\24\1\51\11\24\2\51\1\0\1\51"+
            "\2\24\1\0\3\51\2\0\1\52\2\0\1\51\1\0"+
            "\20\24\1\51\1\24\1\51\5\24\1\u01b5\1\51\3\24"+
            "\1\51\11\24\2\51\1\0\3\51\1\0\3\51\2\0"+
            "\1\51\2\0\1\51\1\0\13\51\1\u01b6\35\51\1\0"+
            "\3\51\1\0\3\51\2\0\1\51\2\0\1\51\1\0"+
            "\17\51\1\u01b7\31\51\1\0\1\51\2\24\1\0\3\51"+
            "\2\0\1\52\2\0\1\51\1\0\13\24\1\336\4\24"+
            "\1\51\1\24\1\51\6\24\1\51\3\24\1\51\11\24"+
            "\2\51\1\0\1\51\2\24\1\0\3\51\2\0\1\52"+
            "\2\0\1\51\1\0\17\24\1\u01b8\1\51\1\24\1\51"+
            "\6\24\1\51\3\24\1\51\11\24\2\51\1\0\1\51"+
            "\2\24\1\0\3\51\2\0\1\52\2\0\1\51\1\0"+
            "\17\24\1\u01b9\1\51\1\24\1\51\6\24\1\51\3\24"+
            "\1\51\11\24\2\51\43\0\1\323\61\0\1\u01ba\101\0"+
            "\1\u01bb\52\0\1\u01bc\1\0\1\u01bd\77\0\1\u01be\61\0"+
            "\1\76\11\0\2\u01bf\52\0\1\323\10\0\1\315\67\0"+
            "\1\u01c0\23\0\1\51\2\24\1\0\3\51\2\0\1\52"+
            "\2\0\1\51\1\0\20\24\1\51\1\24\1\51\1\24"+
            "\1\343\4\24\1\51\3\24\1\51\11\24\2\51\1\0"+
            "\1\51\2\24\1\0\3\51\2\0\1\52\2\0\1\51"+
            "\1\0\20\24\1\51\1\24\1\51\3\24\1\343\2\24"+
            "\1\51\3\24\1\51\11\24\2\51\1\0\3\51\1\0"+
            "\3\51\2\0\1\51\2\0\1\51\1\0\16\51\1\u01c1"+
            "\32\51\1\0\1\51\2\24\1\0\3\51\2\0\1\52"+
            "\2\0\1\51\1\0\16\24\1\u01c2\1\24\1\51\1\24"+
            "\1\51\6\24\1\51\3\24\1\51\11\24\2\51\1\0"+
            "\3\51\1\0\3\51\2\0\1\51\2\0\1\51\1\0"+
            "\30\51\1\u01c3\20\51\1\0\1\51\2\24\1\0\3\51"+
            "\2\0\1\52\2\0\1\51\1\0\20\24\1\51\1\24"+
            "\1\51\5\24\1\107\1\51\3\24\1\51\11\24\2\51"+
            "\1\0\1\51\2\24\1\0\3\51\2\0\1\52\2\0"+
            "\1\51\1\0\13\24\1\u01c4\1\24\1\u01c5\2\24\1\51"+
            "\1\24\1\51\6\24\1\51\3\24\1\51\11\24\2\51"+
            "\1\0\1\51\2\24\1\0\3\51\2\0\1\52\2\0"+
            "\1\51\1\0\20\24\1\51\1\24\1\51\2\24\1\u01c6"+
            "\3\24\1\51\3\24\1\51\11\24\2\51\1\0\1\51"+
            "\2\24\1\0\3\51\2\0\1\52\2\0\1\51\1\0"+
            "\17\24\1\u0192\1\51\1\24\1\51\6\24\1\u01c7\1\u01c8"+
            "\2\24\1\51\11\24\2\51\1\0\1\51\2\24\1\0"+
            "\3\51\2\0\1\52\2\0\1\51\1\0\15\24\1\343"+
            "\2\24\1\51\1\24\1\51\3\24\1\u01c9\2\24\1\51"+
            "\3\24\1\51\11\24\2\51\1\0\3\51\1\0\3\51"+
            "\2\0\1\51\2\0\1\51\1\0\26\51\1\u01ca\22\51"+
            "\1\0\1\51\2\24\1\0\3\51\2\0\1\52\2\0"+
            "\1\51\1\0\20\24\1\51\1\24\1\51\3\24\1\u01cb"+
            "\2\24\1\51\3\24\1\51\11\24\2\51\1\0\3\51"+
            "\1\0\3\51\2\0\1\51\2\0\1\51\1\0\1\u01cc"+
            "\5\51\1\u01cd\13\51\2\52\25\51\1\0\1\51\2\24"+
            "\1\0\3\51\2\0\1\52\2\0\1\51\1\0\1\111"+
            "\5\24\1\112\11\24\1\51\1\24\1\52\1\343\5\24"+
            "\1\51\3\24\1\51\11\24\2\51\1\0\3\51\1\0"+
            "\3\51\2\0\1\51\2\0\1\51\1\0\25\51\1\u01ce"+
            "\23\51\1\0\1\51\2\24\1\0\3\51\2\0\1\52"+
            "\2\0\1\51\1\0\20\24\1\51\1\24\1\51\2\24"+
            "\1\u010a\3\24\1\51\3\24\1\51\11\24\2\51\1\0"+
            "\1\51\2\24\1\0\3\51\2\0\1\52\2\0\1\51"+
            "\1\0\15\24\1\361\2\24\1\51\1\24\1\51\6\24"+
            "\1\51\3\24\1\51\11\24\2\51\1\0\1\51\2\24"+
            "\1\0\3\51\2\0\1\52\2\0\1\51\1\0\20\24"+
            "\1\51\1\24\1\51\6\24\1\51\1\24\1\u01cf\1\24"+
            "\1\51\11\24\2\51\1\0\1\51\2\24\1\0\3\51"+
            "\2\0\1\52\2\0\1\51\1\0\20\24\1\51\1\24"+
            "\1\51\3\24\1\u0188\2\24\1\51\3\24\1\51\11\24"+
            "\2\51\1\0\1\51\2\24\1\0\3\51\2\0\1\52"+
            "\2\0\1\51\1\0\20\24\1\51\1\24\1\51\2\24"+
            "\1\u01a7\3\24\1\51\3\24\1\51\11\24\2\51\1\0"+
            "\1\51\2\24\1\0\3\51\2\0\1\52\2\0\1\51"+
            "\1\0\16\24\1\u0104\1\24\1\51\1\24\1\51\6\24"+
            "\1\51\3\24\1\51\11\24\2\51\1\0\1\51\2\24"+
            "\1\0\3\51\2\0\1\52\2\0\1\51\1\0\20\24"+
            "\1\51\1\24\1\51\2\24\1\54\3\24\1\51\3\24"+
            "\1\51\11\24\2\51\1\0\1\51\2\24\1\0\3\51"+
            "\2\0\1\52\2\0\1\51\1\0\11\24\1\54\6\24"+
            "\1\51\1\24\1\51\6\24\1\51\3\24\1\51\11\24"+
            "\2\51\1\0\1\51\2\24\1\0\3\51\2\0\1\52"+
            "\2\0\1\51\1\0\20\24\1\51\1\24\1\51\5\24"+
            "\1\121\1\51\3\24\1\51\11\24\2\51\1\0\1\51"+
            "\2\24\1\0\3\51\2\0\1\52\2\0\1\51\1\0"+
            "\20\24\1\51\1\24\1\51\6\24\1\u01d0\1\u01d1\2\24"+
            "\1\51\11\24\2\51\1\0\1\51\2\24\1\0\3\51"+
            "\2\0\1\52\2\0\1\51\1\0\20\24\1\51\1\24"+
            "\1\51\6\24\1\u01d2\1\u01d3\2\24\1\51\11\24\2\51"+
            "\35\0\1\u01d4\53\0\1\323\2\0\1\323\66\0\1\323"+
            "\77\0\1\u01d5\66\0\1\323\104\0\1\u01d6\64\0\1\226"+
            "\54\0\1\u019b\106\0\2\334\54\0\1\u01d7\67\0\1\u01d8"+
            "\50\0\1\323\2\0\1\323\11\0\1\323\1\0\1\323"+
            "\6\0\1\u013f\1\u01d9\1\0\2\u0141\66\0\2\76\4\0"+
            "\1\323\60\0\1\323\55\0\1\u01da\5\0\1\u019b\62\0"+
            "\1\323\72\0\2\u016b\4\0\1\u01db\51\0\1\u01dc\77\0"+
            "\2\u01dd\51\0\1\323\113\0\2\u01de\66\0\2\u01df\63\0"+
            "\1\u01e0\54\0\1\u016d\76\0\2\u016b\57\0\1\u01e1\73\0"+
            "\1\u0162\32\0\3\51\1\0\3\51\2\0\1\51\2\0"+
            "\1\51\1\0\30\51\1\u01e2\20\51\1\0\1\51\2\24"+
            "\1\0\3\51\2\0\1\52\2\0\1\51\1\0\20\24"+
            "\1\51\1\24\1\51\5\24\1\u01ac\1\51\3\24\1\51"+
            "\11\24\2\51\1\0\3\51\1\0\3\51\2\0\1\51"+
            "\2\0\1\51\1\0\12\51\1\u01e3\36\51\1\0\1\51"+
            "\2\24\1\0\3\51\2\0\1\52\2\0\1\51\1\0"+
            "\12\24\1\u01e4\5\24\1\51\1\24\1\51\6\24\1\51"+
            "\3\24\1\51\11\24\2\51\1\0\1\51\2\24\1\0"+
            "\3\51\2\0\1\52\2\0\1\51\1\0\20\24\1\51"+
            "\1\24\1\51\2\24\1\u01e5\3\24\1\51\3\24\1\51"+
            "\11\24\2\51\1\0\1\51\2\24\1\0\3\51\2\0"+
            "\1\52\2\0\1\51\1\0\20\24\1\51\1\24\1\51"+
            "\6\24\1\u01e6\1\u01e7\2\24\1\51\11\24\2\51\1\0"+
            "\3\51\1\0\3\51\2\0\1\51\2\0\1\51\1\0"+
            "\24\51\1\u01e8\24\51\1\0\3\51\1\0\3\51\2\0"+
            "\1\51\2\0\1\51\1\0\27\51\1\u01e9\21\51\1\0"+
            "\1\51\2\24\1\0\3\51\2\0\1\52\2\0\1\51"+
            "\1\0\20\24\1\51\1\24\1\51\4\24\1\u01ea\1\24"+
            "\1\51\3\24\1\51\11\24\2\51\1\0\3\51\1\0"+
            "\3\51\2\0\1\51\2\0\1\51\1\0\42\51\1\u01b6"+
            "\6\51\1\0\1\51\2\24\1\0\3\51\2\0\1\52"+
            "\2\0\1\51\1\0\13\24\1\343\4\24\1\51\1\24"+
            "\1\51\6\24\1\51\3\24\1\51\11\24\2\51\1\0"+
            "\1\51\2\24\1\0\3\51\2\0\1\52\2\0\1\51"+
            "\1\0\20\24\1\51\1\24\1\51\5\24\1\u01eb\1\51"+
            "\3\24\1\51\11\24\2\51\1\0\3\51\1\0\3\51"+
            "\2\0\1\51\2\0\1\51\1\0\37\51\1\u01ec\11\51"+
            "\1\0\1\51\2\24\1\0\3\51\2\0\1\52\2\0"+
            "\1\51\1\0\20\24\1\363\1\54\1\51\6\24\1\51"+
            "\3\24\1\51\11\24\2\51\1\0\1\51\2\24\1\0"+
            "\3\51\2\0\1\52\2\0\1\51\1\0\12\24\1\u01ed"+
            "\5\24\1\51\1\24\1\51\6\24\1\51\3\24\1\51"+
            "\11\24\2\51\1\0\1\51\2\24\1\0\3\51\2\0"+
            "\1\52\2\0\1\51\1\0\12\24\1\252\5\24\1\51"+
            "\1\24\1\51\6\24\1\51\3\24\1\51\11\24\2\51"+
            "\1\0\1\51\2\24\1\0\3\51\2\0\1\52\2\0"+
            "\1\51\1\0\1\u01ee\1\u0188\5\24\1\u0188\10\24\1\51"+
            "\1\24\1\51\6\24\1\51\3\24\1\51\11\24\2\51"+
            "\1\0\1\51\2\24\1\0\3\51\2\0\1\52\2\0"+
            "\1\51\1\0\16\24\1\u0144\1\24\1\51\1\24\1\51"+
            "\6\24\1\51\3\24\1\51\11\24\2\51\1\0\3\51"+
            "\1\0\3\51\2\0\1\51\2\0\1\51\1\0\31\51"+
            "\2\u01ef\16\51\1\0\1\51\2\24\1\0\3\51\2\0"+
            "\1\52\2\0\1\51\1\0\20\24\1\51\1\24\1\51"+
            "\6\24\1\u01ef\1\u01f0\2\24\1\51\11\24\2\51\1\0"+
            "\3\51\1\0\3\51\2\0\1\51\2\0\1\51\1\0"+
            "\34\51\1\52\14\51\1\0\1\51\2\24\1\0\3\51"+
            "\2\0\1\52\2\0\1\51\1\0\20\24\1\51\1\24"+
            "\1\51\6\24\1\51\2\24\1\343\1\51\11\24\2\51"+
            "\1\0\1\51\2\24\1\0\3\51\2\0\1\52\2\0"+
            "\1\51\1\0\16\24\1\u01f1\1\24\1\51\1\24\1\51"+
            "\6\24\1\51\3\24\1\51\11\24\2\51\1\0\3\51"+
            "\1\0\3\51\2\0\1\51\2\0\1\51\1\0\42\51"+
            "\1\52\6\51\1\0\1\51\2\24\1\0\3\51\2\0"+
            "\1\52\2\0\1\51\1\0\20\24\1\51\1\24\1\51"+
            "\6\24\1\51\3\24\1\51\4\24\1\343\4\24\2\51"+
            "\52\0\1\u0196\53\0\1\u01f2\101\0\2\u01f3\54\0\1\u01f4"+
            "\70\0\2\323\72\0\1\u01f5\100\0\1\323\54\0\2\u013c"+
            "\1\0\1\76\72\0\1\u0162\2\u01f6\63\0\1\u01f2\53\0"+
            "\1\u01f7\37\0\1\51\2\24\1\0\3\51\2\0\1\52"+
            "\2\0\1\51\1\0\17\24\1\u01f8\1\51\1\24\1\51"+
            "\6\24\1\51\3\24\1\51\11\24\2\51\1\0\1\51"+
            "\2\24\1\0\3\51\2\0\1\52\2\0\1\51\1\0"+
            "\20\24\1\52\1\343\1\51\6\24\1\51\3\24\1\51"+
            "\11\24\2\51\1\0\1\51\2\24\1\0\3\51\2\0"+
            "\1\52\2\0\1\51\1\0\20\24\1\51\1\24\1\51"+
            "\1\24\1\u01f9\4\24\1\51\3\24\1\51\11\24\2\51"+
            "\1\0\3\51\1\0\3\51\2\0\1\51\2\0\1\51"+
            "\1\0\35\51\1\52\13\51\1\0\3\51\1\0\3\51"+
            "\2\0\1\51\2\0\1\51\1\0\22\51\2\u0147\1\51"+
            "\1\u0191\23\51\1\0\1\51\2\24\1\0\3\51\2\0"+
            "\1\52\2\0\1\51\1\0\20\24\1\51\1\24\1\51"+
            "\6\24\1\51\3\24\1\52\11\24\2\51\1\0\1\51"+
            "\2\24\1\0\3\51\2\0\1\52\2\0\1\51\1\0"+
            "\20\24\1\51\1\24\1\u0147\1\u0148\1\24\1\u0192\3\24"+
            "\1\51\3\24\1\51\11\24\2\51\1\0\1\51\2\24"+
            "\1\0\3\51\2\0\1\52\2\0\1\51\1\0\20\24"+
            "\1\51\1\24\1\51\5\24\1\u0183\1\u01fa\1\u01fb\2\24"+
            "\1\51\11\24\2\51\1\0\3\51\1\0\3\51\2\0"+
            "\1\51\2\0\1\51\1\0\12\51\1\u01fc\36\51\1\0"+
            "\1\51\2\24\1\0\3\51\2\0\1\52\2\0\1\51"+
            "\1\0\12\24\1\u01fd\5\24\1\51\1\24\1\51\6\24"+
            "\1\51\3\24\1\51\11\24\2\51\1\0\1\51\2\24"+
            "\1\0\3\51\2\0\1\52\2\0\1\51\1\0\20\24"+
            "\1\51\1\24\1\51\6\24\1\51\3\24\1\51\7\24"+
            "\1\u01a7\1\24\2\51\1\0\1\51\2\24\1\0\3\51"+
            "\2\0\1\52\2\0\1\51\1\0\17\24\1\u01f8\1\51"+
            "\1\24\1\51\2\24\1\u010a\3\24\1\51\3\24\1\51"+
            "\11\24\2\51\1\0\3\51\1\0\3\51\2\0\1\51"+
            "\2\0\1\51\1\0\17\51\1\u01fe\31\51\1\0\1\51"+
            "\2\24\1\0\3\51\2\0\1\52\2\0\1\51\1\0"+
            "\17\24\1\252\1\51\1\24\1\51\6\24\1\51\3\24"+
            "\1\51\11\24\2\51\1\0\1\51\2\24\1\0\3\51"+
            "\2\0\1\52\2\0\1\51\1\0\20\24\1\51\1\24"+
            "\1\51\6\24\1\51\2\24\1\u01ff\1\51\11\24\2\51"+
            "\1\0\3\51\1\0\3\51\2\0\1\51\2\0\1\51"+
            "\1\0\17\51\1\u0200\31\51\1\0\1\51\2\24\1\0"+
            "\3\51\2\0\1\52\2\0\1\51\1\0\17\24\1\u0201"+
            "\1\51\1\24\1\51\6\24\1\51\3\24\1\51\11\24"+
            "\2\51\1\0\3\51\1\0\3\51\2\0\1\51\2\0"+
            "\1\51\1\0\13\51\1\u0202\35\51\1\0\1\51\2\24"+
            "\1\0\3\51\2\0\1\52\2\0\1\51\1\0\13\24"+
            "\1\u0203\4\24\1\51\1\24\1\51\6\24\1\51\3\24"+
            "\1\51\11\24\2\51\1\0\1\51\2\24\1\0\3\51"+
            "\2\0\1\52\2\0\1\51\1\0\17\24\1\u0204\1\51"+
            "\1\24\1\51\6\24\1\51\3\24\1\51\11\24\2\51"+
            "\1\0\3\51\1\0\3\51\2\0\1\51\2\0\1\51"+
            "\1\0\17\51\1\52\31\51\1\0\3\51\1\0\3\51"+
            "\2\0\1\51\2\0\1\51\1\0\22\51\2\u018b\25\51"+
            "\1\0\1\51\2\24\1\0\3\51\2\0\1\52\2\0"+
            "\1\51\1\0\20\24\1\51\1\24\1\u018b\1\205\5\24"+
            "\1\51\3\24\1\51\11\24\2\51\1\0\1\51\2\24"+
            "\1\0\3\51\2\0\1\52\2\0\1\51\1\0\20\24"+
            "\1\51\1\24\1\51\3\24\1\u01c9\2\24\1\51\3\24"+
            "\1\51\11\24\2\51\52\0\1\u0205\52\0\1\323\104\0"+
            "\1\u0206\65\0\2\u0207\55\0\2\u016d\102\0\1\u0208\62\0"+
            "\1\u0208\22\0\3\51\1\0\3\51\2\0\1\51\2\0"+
            "\1\51\1\0\33\51\1\u01e6\15\51\1\0\1\51\2\24"+
            "\1\0\3\51\2\0\1\52\2\0\1\51\1\0\20\24"+
            "\1\51\1\24\1\51\6\24\1\51\1\24\1\u01e7\1\24"+
            "\1\51\11\24\2\51\1\0\3\51\1\0\3\51\2\0"+
            "\1\51\2\0\1\51\1\0\16\51\1\52\32\51\1\0"+
            "\1\51\2\24\1\0\3\51\2\0\1\52\2\0\1\51"+
            "\1\0\20\24\1\51\1\24\1\51\6\24\1\51\1\24"+
            "\1\u0209\1\24\1\51\11\24\2\51\1\0\1\51\2\24"+
            "\1\0\3\51\2\0\1\52\2\0\1\51\1\0\20\24"+
            "\1\51\1\24\1\51\6\24\1\u01ce\1\u010a\2\24\1\51"+
            "\11\24\2\51\1\0\1\51\2\24\1\0\3\51\2\0"+
            "\1\52\2\0\1\51\1\0\20\24\1\u01b6\1\336\1\51"+
            "\6\24\1\51\3\24\1\51\11\24\2\51\1\0\3\51"+
            "\1\0\3\51\2\0\1\51\2\0\1\51\1\0\34\51"+
            "\1\u020a\14\51\1\0\1\51\2\24\1\0\3\51\2\0"+
            "\1\52\2\0\1\51\1\0\20\24\1\51\1\24\1\51"+
            "\6\24\1\51\2\24\1\u020b\1\51\11\24\2\51\1\0"+
            "\1\51\2\24\1\0\3\51\2\0\1\52\2\0\1\51"+
            "\1\0\17\24\1\u0192\1\51\1\24\1\51\6\24\1\51"+
            "\3\24\1\51\11\24\2\51\1\0\3\51\1\0\3\51"+
            "\2\0\1\51\2\0\1\51\1\0\27\51\1\u020a\21\51"+
            "\1\0\1\51\2\24\1\0\3\51\2\0\1\52\2\0"+
            "\1\51\1\0\20\24\1\51\1\24\1\51\4\24\1\u020b"+
            "\1\24\1\51\3\24\1\51\11\24\2\51\1\0\3\51"+
            "\1\0\3\51\2\0\1\51\2\0\1\51\1\0\2\51"+
            "\1\52\46\51\1\0\3\51\1\0\3\51\2\0\1\51"+
            "\2\0\1\51\1\0\3\51\1\52\45\51\1\0\3\51"+
            "\1\0\3\51\2\0\1\51\2\0\1\51\1\0\27\51"+
            "\1\52\21\51\1\0\1\51\2\24\1\0\3\51\2\0"+
            "\1\52\2\0\1\51\1\0\4\24\1\343\13\24\1\51"+
            "\1\24\1\51\6\24\1\51\3\24\1\51\11\24\2\51"+
            "\1\0\3\51\1\0\3\51\2\0\1\51\2\0\1\51"+
            "\1\0\27\51\1\u020c\21\51\1\0\1\51\2\24\1\0"+
            "\3\51\2\0\1\52\2\0\1\51\1\0\20\24\1\51"+
            "\1\24\1\51\4\24\1\u020d\1\24\1\51\3\24\1\51"+
            "\11\24\2\51\1\0\3\51\1\0\3\51\2\0\1\51"+
            "\2\0\1\51\1\0\13\51\1\u020c\35\51\1\0\1\51"+
            "\2\24\1\0\3\51\2\0\1\52\2\0\1\51\1\0"+
            "\13\24\1\u020d\4\24\1\51\1\24\1\51\6\24\1\51"+
            "\3\24\1\51\11\24\2\51\44\0\1\u015d\54\0\1\323"+
            "\67\0\1\277\16\0\2\76\7\0\1\u020e\37\0\1\u016b"+
            "\106\0\2\76\52\0\1\323\10\0\1\315\11\0\1\323"+
            "\57\0\1\u020f\70\0\2\u0210\54\0\1\u0211\72\0\2\u0212"+
            "\57\0\1\u0213\66\0\1\317\102\0\1\u01d7\24\0\3\51"+
            "\1\0\3\51\2\0\1\51\2\0\1\51\1\0\45\51"+
            "\1\u01a5\3\51\1\0\3\51\1\0\3\51\2\0\1\51"+
            "\2\0\1\51\1\0\30\51\1\u01b6\20\51\1\0\1\51"+
            "\2\24\1\0\3\51\2\0\1\52\2\0\1\51\1\0"+
            "\20\24\1\51\1\24\1\51\5\24\1\336\1\51\3\24"+
            "\1\51\11\24\2\51\1\0\1\51\2\24\1\0\3\51"+
            "\2\0\1\52\2\0\1\51\1\0\20\24\1\51\1\24"+
            "\1\51\4\24\1\u0214\1\24\1\51\3\24\1\51\11\24"+
            "\2\51\1\0\3\51\1\0\3\51\2\0\1\51\2\0"+
            "\1\51\1\0\24\51\1\52\24\51\1\0\3\51\1\0"+
            "\3\51\2\0\1\51\2\0\1\51\1\0\25\51\1\u0215"+
            "\23\51\1\0\3\51\1\0\3\51\2\0\1\51\2\0"+
            "\1\51\1\0\15\51\1\52\33\51\1\0\1\51\2\24"+
            "\1\0\3\51\2\0\1\52\2\0\1\51\1\0\15\24"+
            "\1\343\2\24\1\51\1\24\1\51\6\24\1\51\3\24"+
            "\1\51\11\24\2\51\1\0\1\51\2\24\1\0\3\51"+
            "\2\0\1\52\2\0\1\51\1\0\14\24\1\u0216\3\24"+
            "\1\51\1\24\1\51\6\24\1\51\3\24\1\51\11\24"+
            "\2\51\1\0\3\51\1\0\3\51\2\0\1\51\2\0"+
            "\1\51\1\0\25\51\1\u0217\23\51\1\0\1\51\2\24"+
            "\1\0\3\51\2\0\1\52\2\0\1\51\1\0\13\24"+
            "\1\54\4\24\1\51\1\24\1\51\6\24\1\51\3\24"+
            "\1\51\11\24\2\51\1\0\1\51\2\24\1\0\3\51"+
            "\2\0\1\52\2\0\1\51\1\0\11\24\1\u0188\6\24"+
            "\1\51\1\24\1\51\6\24\1\51\3\24\1\51\11\24"+
            "\2\51\1\0\3\51\1\0\3\51\2\0\1\51\2\0"+
            "\1\51\1\0\34\51\1\u0218\14\51\1\0\1\51\2\24"+
            "\1\0\3\51\2\0\1\52\2\0\1\51\1\0\20\24"+
            "\1\51\1\24\1\51\6\24\1\51\2\24\1\u0219\1\51"+
            "\11\24\2\51\1\0\1\51\2\24\1\0\3\51\2\0"+
            "\1\52\2\0\1\51\1\0\20\24\1\51\1\24\1\51"+
            "\4\24\1\u01b9\1\24\1\51\3\24\1\51\11\24\2\51"+
            "\44\0\1\u0207\71\0\1\u016b\70\0\1\u0175\52\0\1\u021a"+
            "\36\0\1\51\2\24\1\0\3\51\2\0\1\52\2\0"+
            "\1\51\1\0\20\24\1\51\1\24\1\51\4\24\1\252"+
            "\1\24\1\51\3\24\1\51\11\24\2\51\1\0\3\51"+
            "\1\0\3\51\2\0\1\51\2\0\1\51\1\0\30\51"+
            "\1\u0135\20\51\1\0\1\51\2\24\1\0\3\51\2\0"+
            "\1\52\2\0\1\51\1\0\20\24\1\51\1\24\1\51"+
            "\5\24\1\u0137\1\51\3\24\1\51\11\24\2\51\1\0"+
            "\3\51\1\0\3\51\2\0\1\51\2\0\1\51\1\0"+
            "\13\51\1\u021b\35\51\1\0\1\51\2\24\1\0\3\51"+
            "\2\0\1\52\2\0\1\51\1\0\13\24\1\u01ed\4\24"+
            "\1\51\1\24\1\51\6\24\1\51\3\24\1\51\11\24"+
            "\2\51\1\0\3\51\1\0\3\51\2\0\1\51\2\0"+
            "\1\51\1\0\30\51\1\52\20\51\1\0\1\51\2\24"+
            "\1\0\3\51\2\0\1\52\2\0\1\51\1\0\13\24"+
            "\1\u021c\4\24\1\51\1\24\1\51\6\24\1\51\3\24"+
            "\1\51\11\24\2\51\1\0\3\51\1\0\3\51\2\0"+
            "\1\51\2\0\1\51\1\0\36\51\1\52\12\51\1\0"+
            "\1\51\2\24\1\0\3\51\2\0\1\52\2\0\1\51"+
            "\1\0\20\24\1\51\1\24\1\51\6\24\1\51\3\24"+
            "\1\51\1\343\10\24\2\51\1\0\3\51\1\0\3\51"+
            "\2\0\1\51\2\0\1\51\1\0\31\51\2\u01fe\16\51"+
            "\1\0\1\51\2\24\1\0\3\51\2\0\1\52\2\0"+
            "\1\51\1\0\20\24\1\51\1\24\1\51\6\24\1\u01fe"+
            "\1\252\2\24\1\51\11\24\2\51\1\0\1\51\2\24"+
            "\1\0\3\51\2\0\1\52\2\0\1\51\1\0\20\24"+
            "\1\51\1\24\1\51\6\24\1\51\3\24\1\51\5\24"+
            "\1\146\3\24\2\51\45\0\1\u021d\70\0\1\323\71\0"+
            "\2\323\17\0\1\51\2\24\1\0\3\51\2\0\1\52"+
            "\2\0\1\51\1\0\20\24\1\51\1\24\1\51\3\24"+
            "\1\u021e\2\24\1\51\3\24\1\51\11\24\2\51\1\0"+
            "\3\51\1\0\3\51\2\0\1\51\2\0\1\51\1\0"+
            "\31\51\2\52\16\51\1\0\1\51\2\24\1\0\3\51"+
            "\2\0\1\52\2\0\1\51\1\0\20\24\1\51\1\24"+
            "\1\51\6\24\1\52\1\343\2\24\1\51\11\24\2\51"+
            "\1\0\3\51\1\0\3\51\2\0\1\51\2\0\1\51"+
            "\1\0\17\51\1\u021f\31\51\1\0\1\51\2\24\1\0"+
            "\3\51\2\0\1\52\2\0\1\51\1\0\17\24\1\u0220"+
            "\1\51\1\24\1\51\6\24\1\51\3\24\1\51\11\24"+
            "\2\51\31\0\1\u0221\110\0\1\u0222\63\0\1\u0223\76\0"+
            "\1\323\61\0\1\u0224\63\0\1\u0225\25\0\1\51\2\24"+
            "\1\0\3\51\2\0\1\52\2\0\1\51\1\0\20\24"+
            "\1\51\1\24\1\51\5\24\1\u0226\1\51\3\24\1\51"+
            "\11\24\2\51\1\0\3\51\1\0\3\51\2\0\1\51"+
            "\2\0\1\51\1\0\27\51\1\u0227\21\51\1\0\1\51"+
            "\2\24\1\0\3\51\2\0\1\52\2\0\1\51\1\0"+
            "\20\24\1\51\1\24\1\51\2\24\1\u0192\3\24\1\51"+
            "\3\24\1\51\11\24\2\51\1\0\3\51\1\0\3\51"+
            "\2\0\1\51\2\0\1\51\1\0\16\51\1\u0228\32\51"+
            "\1\0\3\51\1\0\3\51\2\0\1\51\2\0\1\51"+
            "\1\0\1\52\2\51\1\52\11\51\1\52\1\51\1\52"+
            "\6\51\1\u0229\1\u022a\1\51\2\u022b\16\51\1\0\1\51"+
            "\2\24\1\0\3\51\2\0\1\52\2\0\1\51\1\0"+
            "\1\343\2\24\1\343\11\24\1\343\1\24\1\343\1\51"+
            "\1\24\1\51\3\24\1\u01c9\1\u014c\1\24\1\u022b\1\u022c"+
            "\2\24\1\51\11\24\2\51\32\0\1\u0196\36\0\3\51"+
            "\1\0\3\51\2\0\1\51\2\0\1\51\1\0\13\51"+
            "\1\363\35\51\1\0\1\51\2\24\1\0\3\51\2\0"+
            "\1\52\2\0\1\51\1\0\20\24\1\51\1\24\1\51"+
            "\2\24\1\u022d\3\24\1\51\3\24\1\51\11\24\2\51"+
            "\36\0\1\u022e\32\0\1\51\2\24\1\0\3\51\2\0"+
            "\1\52\2\0\1\51\1\0\17\24\1\u022f\1\51\1\24"+
            "\1\51\6\24\1\51\3\24\1\51\11\24\2\51\1\0"+
            "\3\51\1\0\3\51\2\0\1\51\2\0\1\51\1\0"+
            "\44\51\1\u0230\4\51\1\0\1\51\2\24\1\0\3\51"+
            "\2\0\1\52\2\0\1\51\1\0\20\24\1\51\1\24"+
            "\1\51\6\24\1\51\3\24\1\51\6\24\1\u0231\2\24"+
            "\2\51\43\0\1\u0232\76\0\1\u016d\65\0\2\76\7\0"+
            "\1\u0233\66\0\1\u0234\10\0\1\51\2\24\1\0\3\51"+
            "\2\0\1\52\2\0\1\51\1\0\17\24\1\u0235\1\51"+
            "\1\24\1\51\6\24\1\51\3\24\1\51\11\24\2\51"+
            "\1\0\3\51\1\0\3\51\2\0\1\51\2\0\1\51"+
            "\1\0\30\51\1\u0236\20\51\1\0\3\51\1\0\3\51"+
            "\2\0\1\51\2\0\1\51\1\0\26\51\1\52\22\51"+
            "\1\0\3\51\1\0\3\51\2\0\1\51\2\0\1\51"+
            "\1\0\17\51\1\u0191\31\51\1\0\3\51\1\0\3\51"+
            "\2\0\1\51\2\0\1\51\1\0\15\51\1\52\10\51"+
            "\1\u0229\22\51\1\0\3\51\1\0\3\51\2\0\1\51"+
            "\2\0\1\51\1\0\26\51\1\u01ce\22\51\1\0\1\51"+
            "\2\24\1\0\3\51\2\0\1\52\2\0\1\51\1\0"+
            "\20\24\1\51\1\24\1\51\3\24\1\u010a\2\24\1\51"+
            "\3\24\1\51\11\24\2\51\1\0\1\51\2\24\1\0"+
            "\3\51\2\0\1\52\2\0\1\51\1\0\20\24\1\51"+
            "\1\24\1\51\6\24\1\51\3\24\1\51\1\24\1\u01a7"+
            "\7\24\2\51\32\0\1\u0237\36\0\1\51\2\24\1\0"+
            "\3\51\2\0\1\52\2\0\1\51\1\0\13\24\1\u0238"+
            "\4\24\1\51\1\24\1\51\6\24\1\51\3\24\1\51"+
            "\11\24\2\51\1\0\3\51\1\0\3\51\2\0\1\51"+
            "\2\0\1\51\1\0\44\51\1\52\4\51\1\0\1\51"+
            "\2\24\1\0\3\51\2\0\1\52\2\0\1\51\1\0"+
            "\20\24\1\51\1\24\1\51\6\24\1\51\3\24\1\51"+
            "\6\24\1\343\2\24\2\51\35\0\1\u0239\63\0\1\u023a"+
            "\115\0\1\323\11\0\1\51\2\24\1\0\3\51\2\0"+
            "\1\52\2\0\1\51\1\0\20\24\1\51\1\24\1\51"+
            "\6\24\1\51\3\24\1\51\3\24\1\252\5\24\2\51"+
            "\1\0\3\51\1\0\3\51\2\0\1\51\2\0\1\51"+
            "\1\0\17\51\1\u023b\31\51\50\0\2\u023c\17\0\1\51"+
            "\2\24\1\0\3\51\2\0\1\52\2\0\1\51\1\0"+
            "\20\24\1\51\1\24\1\51\6\24\1\u023d\1\u023e\2\24"+
            "\1\51\11\24\2\51\44\0\1\u023f\66\0\1\u0240\25\0"+
            "\3\51\1\0\3\51\2\0\1\51\2\0\1\51\1\0"+
            "\41\51\1\u01fe\7\51\34\0\1\323\64\0\1\277\73\0"+
            "\1\u0241\76\0\1\323\24\0";
    private static int[] zzUnpackTrans() {
        int[] result = new int[31850];
        int offset = 0;
        offset = zzUnpackTrans(ZZ_TRANS_PACKED_0, offset, result);
        return result;
    }

    private static int zzUnpackTrans(String packed, int offset, int[] result) {
        int i = 0; /* index in packed string */
        int j = offset; /* index in unpacked array */
        int l = packed.length();
        while (i < l) {
            int count = packed.charAt(i++);
            int value = packed.charAt(i++);
            value--;
            do
                result[j++] = value;
            while (--count > 0);
        }
        return j;
    }

    /* error codes */
    private static final int ZZ_UNKNOWN_ERROR = 0;
    private static final int ZZ_NO_MATCH = 1;
    private static final int ZZ_PUSHBACK_2BIG = 2;

    /* error messages for the codes above */
    private static final String ZZ_ERROR_MSG[] = { "Unkown internal scanner error", "Error: could not match input",
            "Error: pushback value was too large" };

    /**
     * ZZ_ATTRIBUTE[aState] contains the attributes of state <code>aState</code>
     */
    private static final int[] ZZ_ATTRIBUTE = zzUnpackAttribute();

    private static final String ZZ_ATTRIBUTE_PACKED_0 =  "\2\0\1\11\5\1\1\11\1\1\1\11\41\1\2\11"+
            "\25\0\44\1\1\0\2\1\6\0\1\1\1\0\42\1"+
            "\4\0\1\1\1\0\27\1\7\0\1\1\31\0\1\11"+
            "\11\0\60\1\3\0\1\1\5\0\1\1\2\0\42\1"+
            "\10\0\32\1\1\11\2\0\1\1\10\0\1\1\17\0"+
            "\35\1\1\11\1\1\6\0\1\1\3\0\30\1\7\0"+
            "\23\1\2\0\1\1\1\0\1\1\3\0\1\1\5\0"+
            "\20\1\1\11\2\0\1\1\2\0\15\1\3\0\6\1"+
            "\5\0\7\1\1\0\2\1\1\0\3\1\3\0\1\1"+
            "\1\0\14\1\3\0\2\1\1\0\1\1\2\0\1\1"+
            "\1\0\3\1\2\0";


    private static int[] zzUnpackAttribute() {
        int[] result = new int[668];
        int offset = 0;
        offset = zzUnpackAttribute(ZZ_ATTRIBUTE_PACKED_0, offset, result);
        return result;
    }

    private static int zzUnpackAttribute(String packed, int offset, int[] result) {
        int i = 0; /* index in packed string */
        int j = offset; /* index in unpacked array */
        int l = packed.length();
        while (i < l) {
            int count = packed.charAt(i++);
            int value = packed.charAt(i++);
            do
                result[j++] = value;
            while (--count > 0);
        }
        return j;
    }

    /** the input device */
    private java.io.Reader zzReader;

    /** the current state of the DFA */
    private int zzState;

    /** the current lexical state */
    private int zzLexicalState = YYINITIAL;

    /**
     * this buffer contains the current text to be matched and is the source of
     * the yytext() string
     */
    private char zzBuffer[];

    /** the textposition at the last accepting state */
    private int zzMarkedPos;

    /** the current text position in the buffer */
    private int zzCurrentPos;

    /** startRead marks the beginning of the yytext() string in the buffer */
    private int zzStartRead;

    /**
     * endRead marks the last character in the buffer, that has been read from
     * input
     */
    private int zzEndRead;

    /**
     * zzAtBOL == true <=> the scanner is currently at the beginning of a line
     */
    private boolean zzAtBOL = true;

    /** zzAtEOF == true <=> the scanner is at the EOF */
    private boolean zzAtEOF;

    /* user code: */

    /**
     * Constructor. We must have this here as JFLex does not generate a no
     * parameter constructor.
     */
    public AssemblerMIPSTokenMaker() {
        super();
    }

    /**
     * Adds the token specified to the current linked list of tokens.
     *
     * @param tokenType
     *            The token's type.
     */
    private void addToken(int tokenType) {
        addToken(zzStartRead, zzMarkedPos - 1, tokenType);
    }

    /**
     * Adds the token specified to the current linked list of tokens.
     *
     * @param tokenType
     *            The token's type.
     */
    private void addToken(int start, int end, int tokenType) {
        int so = start + offsetShift;
        addToken(zzBuffer, start, end, tokenType, so);
    }

    /**
     * Adds the token specified to the current linked list of tokens.
     *
     * @param array
     *            The character array.
     * @param start
     *            The starting offset in the array.
     * @param end
     *            The ending offset in the array.
     * @param tokenType
     *            The token's type.
     * @param startOffset
     *            The offset in the document at which this token occurs.
     */
    @Override
    public void addToken(char[] array, int start, int end, int tokenType, int startOffset) {
        super.addToken(array, start, end, tokenType, startOffset);
        zzStartRead = zzMarkedPos;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String[] getLineCommentStartAndEnd(int languageIndex) {
        return new String[] { ";", null };
    }

    /**
     * Returns the first token in the linked list of tokens generated from
     * <code>text</code>. This method must be implemented by subclasses so they
     * can correctly implement syntax highlighting.
     *
     * @param text
     *            The text from which to get tokens.
     * @param initialTokenType
     *            The token type we should start with.
     * @param startOffset
     *            The offset into the document at which <code>text</code>
     *            starts.
     * @return The first <code>Token</code> in a linked list representing the
     *         syntax highlighted text.
     */
    @Override
    public Token getTokenList(Segment text, int initialTokenType, int startOffset) {

        resetTokenList();
        this.offsetShift = -text.offset + startOffset;

        // Start off in the proper state.
        int state = Token.NULL;
        switch (initialTokenType) {
        default:
            state = Token.NULL;
        }

        s = text;
        try {
            yyreset(zzReader);
            yybegin(state);
            return yylex();
        } catch (IOException ioe) {
            ioe.printStackTrace();
            return new TokenImpl();
        }

    }

    /**
     * Refills the input buffer.
     *
     * @return <code>true</code> if EOF was reached, otherwise
     *         <code>false</code>.
     */
    private boolean zzRefill() {
        return zzCurrentPos >= s.offset + s.count;
    }

    /**
     * Resets the scanner to read from a new input stream. Does not close the
     * old reader.
     *
     * All internal variables are reset, the old input stream <b>cannot</b> be
     * reused (internal buffer is discarded and lost). Lexical state is set to
     * <tt>YY_INITIAL</tt>.
     *
     * @param reader
     *            the new input stream
     */
    public final void yyreset(Reader reader) {
        // 's' has been updated.
        zzBuffer = s.array;
        /*
         * We replaced the line below with the two below it because zzRefill no
         * longer "refills" the buffer (since the way we do it, it's always
         * "full" the first time through, since it points to the segment's
         * array). So, we assign zzEndRead here.
         */
        // zzStartRead = zzEndRead = s.offset;
        zzStartRead = s.offset;
        zzEndRead = zzStartRead + s.count - 1;
        zzCurrentPos = zzMarkedPos = s.offset;
        zzLexicalState = YYINITIAL;
        zzReader = reader;
        zzAtBOL = true;
        zzAtEOF = false;
    }

    /**
     * Creates a new scanner There is also a java.io.InputStream version of this
     * constructor.
     *
     * @param in
     *            the java.io.Reader to read input from.
     */
    public AssemblerMIPSTokenMaker(java.io.Reader in) {
        this.zzReader = in;
    }

    /**
     * Creates a new scanner. There is also java.io.Reader version of this
     * constructor.
     *
     * @param in
     *            the java.io.Inputstream to read input from.
     */
    public AssemblerMIPSTokenMaker(java.io.InputStream in) {
        this(new java.io.InputStreamReader(in));
    }

    /**
     * Unpacks the compressed character translation table.
     *
     * @param packed
     *            the packed character translation table
     * @return the unpacked character translation table
     */
    private static char[] zzUnpackCMap(String packed) {
        char[] map = new char[0x10000];
        int i = 0; /* index in packed string */
        int j = 0; /* index in unpacked array */
        while (i < 200) {
            int count = packed.charAt(i++);
            char value = packed.charAt(i++);
            do
                map[j++] = value;
            while (--count > 0);
        }
        return map;
    }

    /**
     * Closes the input stream.
     */
    public final void yyclose() throws java.io.IOException {
        zzAtEOF = true; /* indicate end of file */
        zzEndRead = zzStartRead; /* invalidate buffer */

        if (zzReader != null)
            zzReader.close();
    }

    /**
     * Returns the current lexical state.
     */
    public final int yystate() {
        return zzLexicalState;
    }

    /**
     * Enters a new lexical state
     *
     * @param newState
     *            the new lexical state
     */
    @Override
    public final void yybegin(int newState) {
        zzLexicalState = newState;
    }

    /**
     * Returns the text matched by the current regular expression.
     */
    public final String yytext() {
        return new String(zzBuffer, zzStartRead, zzMarkedPos - zzStartRead);
    }

    /**
     * Returns the character at position <tt>pos</tt> from the matched text.
     *
     * It is equivalent to yytext().charAt(pos), but faster
     *
     * @param pos
     *            the position of the character to fetch. A value from 0 to
     *            yylength()-1.
     *
     * @return the character at position pos
     */
    public final char yycharat(int pos) {
        return zzBuffer[zzStartRead + pos];
    }

    /**
     * Returns the length of the matched text region.
     */
    public final int yylength() {
        return zzMarkedPos - zzStartRead;
    }

    /**
     * Reports an error that occured while scanning.
     *
     * In a wellformed scanner (no or only correct usage of yypushback(int) and
     * a match-all fallback rule) this method will only be called with things
     * that "Can't Possibly Happen". If this method is called, something is
     * seriously wrong (e.g. a JFlex bug producing a faulty scanner etc.).
     *
     * Usual syntax/scanner level error handling should be done in error
     * fallback rules.
     *
     * @param errorCode
     *            the code of the errormessage to display
     */
    private void zzScanError(int errorCode) {
        String message;
        try {
            message = ZZ_ERROR_MSG[errorCode];
        } catch (ArrayIndexOutOfBoundsException e) {
            message = ZZ_ERROR_MSG[ZZ_UNKNOWN_ERROR];
        }

        throw new Error(message);
    }

    /**
     * Pushes the specified amount of characters back into the input stream.
     *
     * They will be read again by then next call of the scanning method
     *
     * @param number
     *            the number of characters to be read again. This number must
     *            not be greater than yylength()!
     */
    public void yypushback(int number) {
        if (number > yylength())
            zzScanError(ZZ_PUSHBACK_2BIG);

        zzMarkedPos -= number;
    }

    /**
     * Resumes scanning until the next regular expression is matched, the end of
     * input is encountered or an I/O-Error occurs.
     *
     * @return the next token
     * @exception java.io.IOException
     *                if any I/O-Error occurs
     */
    public org.fife.ui.rsyntaxtextarea.Token yylex() throws java.io.IOException {
        int zzInput;
        int zzAction;

        // cached fields:
        int zzCurrentPosL;
        int zzMarkedPosL;
        int zzEndReadL = zzEndRead;
        char[] zzBufferL = zzBuffer;
        char[] zzCMapL = ZZ_CMAP;

        int[] zzTransL = ZZ_TRANS;
        int[] zzRowMapL = ZZ_ROWMAP;
        int[] zzAttrL = ZZ_ATTRIBUTE;

        while (true) {
            zzMarkedPosL = zzMarkedPos;

            if (zzMarkedPosL > zzStartRead) {
                switch (zzBufferL[zzMarkedPosL - 1]) {
                case '\n':
                case '\u000B':
                case '\u000C':
                case '\u0085':
                case '\u2028':
                case '\u2029':
                    zzAtBOL = true;
                    break;
                case '\r':
                    if (zzMarkedPosL < zzEndReadL)
                        zzAtBOL = zzBufferL[zzMarkedPosL] != '\n';
                    else if (zzAtEOF)
                        zzAtBOL = false;
                    else {
                        boolean eof = zzRefill();
                        zzMarkedPosL = zzMarkedPos;
                        zzEndReadL = zzEndRead;
                        zzBufferL = zzBuffer;
                        if (eof)
                            zzAtBOL = false;
                        else
                            zzAtBOL = zzBufferL[zzMarkedPosL] != '\n';
                    }
                    break;
                default:
                    zzAtBOL = false;
                }
            }
            zzAction = -1;

            zzCurrentPosL = zzCurrentPos = zzStartRead = zzMarkedPosL;

            if (zzAtBOL)
                zzState = ZZ_LEXSTATE[zzLexicalState + 1];
            else
                zzState = ZZ_LEXSTATE[zzLexicalState];

            zzForAction: {
                while (true) {

                    if (zzCurrentPosL < zzEndReadL)
                        zzInput = zzBufferL[zzCurrentPosL++];
                    else if (zzAtEOF) {
                        zzInput = YYEOF;
                        break zzForAction;
                    } else {
                        // store back cached positions
                        zzCurrentPos = zzCurrentPosL;
                        zzMarkedPos = zzMarkedPosL;
                        boolean eof = zzRefill();
                        // get translated positions and possibly new buffer
                        zzCurrentPosL = zzCurrentPos;
                        zzMarkedPosL = zzMarkedPos;
                        zzBufferL = zzBuffer;
                        zzEndReadL = zzEndRead;
                        if (eof) {
                            zzInput = YYEOF;
                            break zzForAction;
                        } else {
                            zzInput = zzBufferL[zzCurrentPosL++];
                        }
                    }
                    int zzNext = zzTransL[zzRowMapL[zzState] + zzCMapL[zzInput]];
                    if (zzNext == -1)
                        break zzForAction;
                    zzState = zzNext;

                    int zzAttributes = zzAttrL[zzState];
                    if ((zzAttributes & 1) == 1) {
                        zzAction = zzState;
                        zzMarkedPosL = zzCurrentPosL;
                        if ((zzAttributes & 8) == 8)
                            break zzForAction;
                    }

                }
            }

            // store back cached position
            zzMarkedPos = zzMarkedPosL;

            switch (zzAction < 0 ? zzAction : ZZ_ACTION[zzAction]) {
            case 1: {
                addToken(Token.IDENTIFIER);
//              System.out.println("ID");
            }
            case 16:
                break;
            case 2: {
                addToken(Token.RESERVED_WORD);
//              System.out.println("REserved word");
            }
            case 17:
                break;
            case 3: {
                addToken(Token.LITERAL_NUMBER_DECIMAL_INT);
//              System.out.println("十进制数");
            }
            case 18:
                break;
            case 4: {
                addToken(Token.ERROR_STRING_DOUBLE);
//              System.out.println("Error String double");
                addNullToken();
                return firstToken;
            }
            case 19:
                break;
            case 5: {
                addToken(Token.ERROR_CHAR);
//              System.out.println("Error Char");
                /*
                 * addNullToken(); return firstToken;
                 */
            }
            case 20:
                break;
            case 6: {
                addToken(Token.COMMENT_EOL);
//              System.out.println("Comment Token");
                addNullToken();
                return firstToken;
            }
            case 21:
                break;
            case 7: {
                addNullToken();
                return firstToken;
            }
            case 22:
                break;
            case 8: {
                addToken(Token.WHITESPACE);
//              System.out.println("WhiteSpace");
            }
            case 23:
                break;
            case 9: {
                addToken(Token.OPERATOR);
//              System.out.println("Operator");
            }
            case 24:
                break;
            case 10: {
                addToken(Token.FUNCTION);
//              System.out.println("function");
            }
            case 25:
                break;
            case 11: {
                addToken(Token.PREPROCESSOR);
//              System.out.println("Preprocessor");
            }
            case 26:
                break;
            case 12: {
                addToken(Token.LITERAL_STRING_DOUBLE_QUOTE);
//              System.out.println("LITERAL_STRING_DOUBLE_QUOTE");
            }
            case 27:
                break;
            case 13: {
                addToken(Token.LITERAL_CHAR);
//              System.out.println("Literal_char");
            }
            case 28:
                break;
            case 14: {
                addToken(Token.VARIABLE);
//              System.out.println("Variable");
            }
            case 29:
                break;
            case 15: {
                addToken(Token.DATA_TYPE);
//              System.out.println("Data Type");
            }
            case 30:
                break;
            default:
//              System.out.println("Default");
                if (zzInput == YYEOF && zzStartRead == zzCurrentPos) {
                    zzAtEOF = true;
                    switch (zzLexicalState) {
                    case YYINITIAL: {
                        addNullToken();
                        return firstToken;
                    }
                    case 669:
                        break;
                    default:
                        return null;
                    }
                } else {
                    zzScanError(ZZ_NO_MATCH);
                }
            }
        }
    }

}
